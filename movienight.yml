---

- hosts: homelab

  vars:
    application: movienight

    docker_network: "{{ networks.pub }}"

  handlers:
    - name: Restart
      ansible.builtin.command: docker restart "{{ application }}"

  tasks:
    - name: Clone
      ansible.builtin.git:
        repo: "https://github.com/zorchenhimer/MovieNight.git"
        dest: "{{ config_directory }}"
        update: true
      register: _movienight_repo_updated

    - name: Build image
      community.docker.docker_image:
        name: "{{ application }}"
        build:
          path: "{{ config_directory }}"
          dockerfile: Dockerfile
          pull: true
          network: "{{ docker_network.name }}"
        source: build
        state: present
        force_source: "{{ true if _movienight_repo_updated.changed else false }}"

    - name: Check settings.json
      ansible.builtin.stat:
        path: "{{ config_directory }}/settings.json"
      register: __movienight_config

    # should be okay as the container needs to be reloaded to take effect
    - name: Create to settings.json
      ansible.builtin.copy:
        src: "{{ config_directory }}/settings_example.json"
        dest: "{{ config_directory }}/settings.json"
        remote_src: true
        mode: "0640"
      when: not __movienight_config.stat.exists

    - name: Configure
      json_patch:
        src: "{{ config_directory }}/settings.json"
        operations:
          - op: add
            path: "{{ item.key }}"
            value: "{{ item.value }}"
        pretty: true
      loop: "{{ _movienight_config_options | dict2items }}"
      notify: Restart
      vars:
        _movienight_config_options:
          RegenAdminPass: false
          LetThemLurk: true
          AdminPassword: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              32373661356532373061373132346535313337663062333432343233643664626539643461626364
              3662656531383364323661626339343938623365636630650a643434306335326662363162353530
              34653431323364373662636232303362383234363639363261623136323537386336323230613035
              6330306361363930390a633264323064626436393633646238356631313531383033663166646138
              30386531653131353465633366623566363137336638396238343436376561336636
          StreamKey: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              37623831366266663663336439656336373231646438666166656132306566343562353763323433
              3662323730316330343136366138373763643663356632630a633531663637663136613036643738
              64353235623337666431333033356635333864663061306263653164656237356631643632623634
              3230333237326238640a613930356537373838396235633733326632353366326461303666353863
              62383438373166303939653830643132663962306463396362666663376263613465

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: "{{ application }}"
        volumes:
          - "{{ config_directory }}/settings.json:/config/settings.json"
        traefik:
          - port: 8089
        homer:
          name: MovieNight
          service: Sharing
          priority: 99
          subtitle: "Video streaming server"
        labels:
          # rtmps/tls is not currently working on Traefik with OBS for me
          '{
            "traefik.tcp.routers.{{ application }}-rtmp.entrypoints": "rtmp",
            "traefik.tcp.routers.{{ application }}-rtmp.rule": "HostSNI(`*`)",
            "traefik.tcp.routers.{{ application }}-rtmp.service": "{{ application }}-rtmp",
            "traefik.tcp.services.{{ application }}-rtmp.loadbalancer.server.port": "1935",
            "com.centurylinklabs.watchtower.enable": "false"
          }'
        comparisons:
          labels: strict
