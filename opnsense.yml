---

- hosts: localhost

  become: false

  connection: local

  force_handlers: true

  gather_facts: false

  vars:
    opnsense_hardware_interfaces:
      lan:
        - igc0
        - igc1
        - igc2
        - igc3
      wan: ix1
      vlan: ix0

    opnsense_wireguard_vpn:
      -
        provider: PureVPN
        location: Sydney
        server:
          address: 172.21.6.238
          private_key: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            61666136626261333766383436386333366464663565313930323530646236343337373933366532
            6338386332323165386666336365336133663666346663660a303032613135653230343139383065
            66373536393632643366623561333431346333326434306235663666646139323763323466646539
            6664623735626535310a363735373838353036316334353036613438343731316361633065363731
            37643736376333373038636638346638373865376330613936343339656566396636646265633466
            3937343865613433393233383864383033376432653730376632
          public_key: 83Har1I19CqpQpatRtFWl4D+3gDB7S4MUB4SNkbMOU4=
        peer:
          endpoint: sx150901-ikev.ptoserver.com
          port: 51820
          public_key: QukvJQh07tpWug+RtwGTWoi/UCXHcK1PFf/Z8HUS23A=
          keepalive: 21
        interface: "{{ networks.vpn_purevpn_sydney.opnsense_identifier }}"
        used_by:
          - "{{ networks.iot.opnsense_identifier }}"
          - "{{ networks.pub.opnsense_identifier }}"

  module_defaults:
    group/oxlorg.opnsense.all: "{{ oxlorg_opnsense_module_defaults }}"
    oxlorg.opnsense.rule:
      match_fields: ["interface", "description"]

  handlers:
    - name: Reload Unbound
      oxlorg.opnsense.reload:
        target: unbound

    - name: Reload VLANs
      oxlorg.opnsense.reload:
        target: interface_vlan

    - name: Reload LAGG
      oxlorg.opnsense.reload:
        target: interface_lagg

    - name: Reload ACME
      oxlorg.opnsense.reload:
        target: acme_certificate

    - name: Reload Monit
      oxlorg.opnsense.reload:
        target: monit

    - name: Reload KEA
      oxlorg.opnsense.reload:
        target: kea

    - name: Reload dnsmasq
      oxlorg.opnsense.reload:
        target: dnsmasq

    - name: Reload firewall rules
      oxlorg.opnsense.reload:
        target: rule

  tasks:
    #  _       _             __
    # (_)_ __ | |_ ___ _ __ / _| __ _  ___ ___ ___
    # | | '_ \| __/ _ | '__| |_ / _` |/ __/ _ / __|
    # | | | | | ||  __| |  |  _| (_| | (_|  __\__ \
    # |_|_| |_|\__\___|_|  |_|  \__,_|\___\___|___/
    - name: Gateway - WAN
      oxlorg.opnsense.gateway:
        name: WAN
        interface: wan
        ip_protocol: inet
        priority: 1
        default_gw: true
        monitor_disable: false
        match_fields:
          - name
      tags:
        - interfaces
        - gateways

    - name: Interface - VLANs
      oxlorg.opnsense.interface_vlan:
        device: "{{ opnsense_hardware_interfaces.vlan }}_vlan{{ item.value.vlan }}"
        parent: "{{ opnsense_hardware_interfaces.vlan }}"
        vlan: "{{ item.value.vlan }}"
        priority: 0
        description: "{{ item.value.name | ansible.builtin.upper }}"
      loop: "{{ networks | ansible.builtin.dict2items }}"
      when: item.value.vlan is defined
      notify: Reload VLANs
      tags:
        - interfaces
        - vlans

    # pending https://github.com/O-X-L/ansible-opnsense/pull/321
    - name: Interface - LAGG
      oxlorg.opnsense.interface_lagg:
        device: lagg0
        members: "{{ opnsense_hardware_interfaces.lan }}"
        proto: failover
      notify: Reload LAGG
      tags:
        - interfaces
        - lagg

    #        _ _
    #   __ _| (_) __ _ ___
    #  / _` | | |/ _` / __|
    # | (_| | | | (_| \__ \
    #  \__,_|_|_|\__,_|___/

    - name: Alias
      oxlorg.opnsense.alias:
        aliases:
          -
            name: rfc1918
            type: network
            content:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
          -
            name: calvin_pc
            content: 10.127.20.20
          -
            name: daikin_airbase
            content: 10.127.30.2
          -
            name: google_cast_devices
            content:
              - 10.127.30.41
              - 10.127.30.42
              - 10.127.30.43
              - 10.127.30.44
              - 10.127.30.45
          -
            name: google_dns
            content:
              - 8.8.8.8
              - 8.8.4.4
          -
            name: nvidia_gamestream_tcp
            type: port
            content:
              - 47984
              - 47989
              - 48010
          -
            name: nvidia_gamestream_udp
            type: port
            content:
              - 47998
              - 47999
              - 48000
              - 48002
              - 48010
          -
            name: home_assistant_targets
            content:
              - 10.127.10.1 # opnsense
              - 10.127.10.31 # unifi network application
          -
            name: homepage
            content: 10.127.40.6
          -
            name: homepage_targets
            content:
              - 10.127.10.1 # opnsense
              - 10.127.10.31 # unifi network application
          -
            name: denon_heos
            type: port
            content:
              - 80
              - 10101
              - 60006
          -
            name: denon_avr
            content: 10.127.30.19
          -
            name: bypass_vpn
            content:
              - 10.127.30.16  # living room tv
              - 10.127.30.17  # nvidia shield tv
              - 10.127.30.22  # nintendo switch dock
              - 10.127.30.23  # nintendo switch wi-fi
              - 10.127.30.40  # chromecast master bedroom
              - 10.127.40.4   # plex
              - 10.127.40.8   # jdownloader
              - 10.127.40.9   # changedetection
      tags:
        - alias

    #        _             _
    #  _ __ | |_   _  __ _(_)_ __  ___
    # | '_ \| | | | |/ _` | | '_ \/ __|
    # | |_) | | |_| | (_| | | | | \__ \
    # | .__/|_|\__,_|\__, |_|_| |_|___/
    # |_|            |___/

    - name: Install Packages
      oxlorg.opnsense.package:
        name: "{{ item }}"
        action: install
      loop:
        - os-acme-client
        - os-cpu-microcode-intel
        - os-ddclient
        - os-nut
        - os-sftp-backup
        - os-smart
        - os-udpbroadcastrelay
      tags:
        - packages

    #   __ _  ___ _ __ ___   ___
    #  / _` |/ __| '_ ` _ \ / _ \
    # | (_| | (__| | | | | |  __/
    #  \__,_|\___|_| |_| |_|\___|

    - name: ACME - Settings
      oxlorg.opnsense.acme_general:
        enabled: true
        auto_renewal: true
        show_intro: false
      notify: Reload ACME
      tags:
        - acme

    - name: ACME - Accounts
      oxlorg.opnsense.acme_account:
        name: "{{ common_user }}"
        ca: letsencrypt
      notify: Reload ACME
      register: _acme_account
      tags:
        - acme

    - name: ACME - Challenge Types
      oxlorg.opnsense.acme_validation:
        name: Cloudflare
        method: dns01
        dns_service: dns_cf
        dns_sleep: 120
        dns_cf_account_id: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          61393964323234653539336138363136333338393837343561663834653835646432346335633335
          3239343638356630383234343438663533383861613132310a393534383530303236636134626134
          64323361643330613963373832343464643933373437656538656537373334363433326538643666
          3938646530663236360a313330363862343238353934623136643963346562636330373731333639
          38363536313939333164656135663836333432386662333739383035366131373265646237366365
          6437303130646234626236396562393734383032306135356561
        dns_cf_token: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          35313530336261373863383131313433373934356264656433613539393831633665363335396338
          6366626334303461653432613231323436343765373965370a393438616631343661656165323433
          35663965363832316331623936343163633836313134643666303739643631633633313962633661
          3236363334303738310a366562643332346639353063626335333230396436613132303165393962
          32616664313633323239353239383234393761313865356434346562316133336364616435663930
          3335303765393461623831663131613564623039613631326265
      notify: Reload ACME
      register: _acme_challenge
      tags:
        - acme

    - name: ACME - Automation
      oxlorg.opnsense.acme_action:
        enabled: true
        name: Reload OPNsense Web UI
        type: configd_restart_gui
      notify: Reload ACME
      register: _acme_automation
      tags:
        - acme

    - name: ACME - Certificate
      oxlorg.opnsense.acme_certificate:
        enabled: true
        name: "opnsense-web.{{ common_local_tld }}"
        description: ""
        account: "{{ _acme_account.diff.after.name }}"
        validation: "{{ _acme_challenge.diff.after.name }}"
        auto_renewal: true
        renew_interval: 60
        key_length: key_ec256
        ocsp: false
        restart_actions: "{{ _acme_automation.diff.after.name }}"
        aliasmode: automatic
      notify: Reload ACME
      tags:
        - acme

    #                        _ _
    #  _ __ ___   ___  _ __ (_| |_
    # | '_ ` _ \ / _ \| '_ \| | __|
    # | | | | | | (_) | | | | | |_
    # |_| |_| |_|\___/|_| |_|_|\__|

    - name: Monit - Alert Settings
      oxlorg.opnsense.monit_alert:
        recipient: "opnsense{{ common_email_to }}"
        not_on: true
        events:
          - instance
        reminder: 10
      notify: Reload Monit
      tags:
        - monit

    - name: Monit - Start
      oxlorg.opnsense.monit_test:
        name: Start
        condition: "status != 0"
        action: start
      notify: Reload Monit
      tags:
        - monit

    - name: Monit - OpenVPN Service
      oxlorg.opnsense.monit_service:
        name: openvpn_client_connected
        type: custom
        path: "/bin/sh -c 'echo state | nc -w 1 -U /var/etc/openvpn/instance-*.sock | grep -q CONNECTED'"
        start: "/bin/sh -c 'pluginctl -s openvpn restart; sleep 10; pluginctl -s unbound restart'"
        tests:
          - Start
      notify: Reload Monit
      tags:
        - monit

    #              _                           _
    #  _   _ _ __ | |__   ___  _   _ _ __   __| |
    # | | | | '_ \| '_ \ / _ \| | | | '_ \ / _` |
    # | |_| | | | | |_) | (_) | |_| | | | | (_| |
    #  \__,_|_| |_|_.__/ \___/ \__,_|_| |_|\__,_|

    - name: Unbound - General
      oxlorg.opnsense.unbound_general:
        dnssec: true
        register_ipv6_link_local: false
        register_dhcp_static_mappings: true
      notify: Reload Unbound
      tags:
        - unbound

    - name: Unbound - Overrides
      oxlorg.opnsense.unbound_host:
        hostname: "*"
        domain: "{{ common_tld }}"
        value: "10.127.10.10"
        description: "Internal resolution for {{ common_tld }}"
      notify: Reload Unbound
      tags:
        - unbound

    - name: Unbound - Query Forwarding
      oxlorg.opnsense.unbound_forward:
        domain: plex.direct
        server: 192.5.5.241
        port: 53
        description: Send plex.direct to root name server F
      notify: Reload Unbound
      tags:
        - unbound

    - name: Unbound - DNS-over-TLS
      oxlorg.opnsense.unbound_dot:
        domain: "{{ item.domain | ansible.builtin.default('') }}"
        target: "{{ item.address }}"
        port: "853"
        verify: "{{ item.hostname }}"
      notify: Reload Unbound
      loop:
        -
          address: 1.1.1.1
          hostname: cloudflare-dns.com
        -
          address: 1.0.0.1
          hostname: cloudflare-dns.com
        -
          address: 76.76.2.11
          hostname: p0.freedns.controld.com
        -
          address: 9.9.9.10
          hostname: dns10.quad9.net
        -
          address: 149.112.112.10
          hostname: dns10.quad9.net
      tags:
        - unbound

    #      _
    #   __| |_ __  ___ _ __ ___   __ _ ___  __ _
    #  / _` | '_ \/ __| '_ ` _ \ / _` / __|/ _` |
    # | (_| | | | \__ | | | | | | (_| \__ | (_| |
    #  \__,_|_| |_|___|_| |_| |_|\__,_|___/\__, |
    #                                         |_|

    - name: KEA - Disable
      oxlorg.opnsense.dhcp_general:
        enabled: false
        reload: true
      tags:
        - kea
        - dnsmasq

    - name: Dnsmasq - General
      oxlorg.opnsense.dnsmasq_general:
        # Default
        enabled: true
        interfaces: "{{ networks | ansible.builtin.dict2items | selectattr('value.dhcp_pool', 'defined') | map(attribute='value.opnsense_identifier') | list }}"

        # DNS
        dns_port: 53053
        local_ttl: 30

        # DNS Query Forwarding
        resolv_system: true
        forward_private_reverse: false

        # DHCP
        dhcp_disable_interfaces: "{{ networks | ansible.builtin.dict2items | selectattr('value.dhcp_pool', 'undefined') | map(attribute='value.opnsense_identifier') | list }}"
        dhcp_fqdn: true
        dhcp_domain: "{{ common_local_tld }}"
        dhcp_local: true
        dhcp_authoritative: true
      notify: Reload dnsmasq
      tags:
        - dnsmasq

    - name: Dnsmasq - DHCP ranges
      oxlorg.opnsense.dnsmasq_range:
        interface: "{{ item.value.opnsense_name }}"
        start_addr: "{{ item.value.dhcp_pool.start }}"
        end_addr: "{{ item.value.dhcp_pool.end }}"
        lease_time: 3600
        domain: "{{ common_local_tld }}"
        ra_mode: []
        description: "{{ item.value.name }}"
      loop: "{{ networks | ansible.builtin.dict2items }}"
      when: item.value.dhcp_pool is defined
      notify: Reload dnsmasq
      tags:
        - dnsmasq

    - name: Dnsmasq - Hosts
      oxlorg.opnsense.dnsmasq_host:
        host: "{{ item.hostname }}"
        domain: "{{ common_local_tld }}"
        local: true
        ip:
          - "{{ item.ip }}"
        hardware_addr: "{{ item.mac | ansible.builtin.default(omit) }}"
        description: "{{ item.hostname }} - Created by Ansible"
        comments: "{{ item.comment | ansible.builtin.default(omit) }}"
      loop: "{{ opnsense_dhcp_reservations }}"
      notify: Reload dnsmasq
      tags:
        - dnsmasq

    - name: Unbound - Forward internal domain to dnsmasq
      oxlorg.opnsense.unbound_forward:
        domain: "{{ common_local_tld }}"
        server: 127.0.0.1
        port: 53053
        description: Forward internal domain to dnsmasq
      notify: Reload Unbound
      tags:
        - dnsmasq
        - unbound

    - name: Dnsmasq - DHCP Boot
      oxlorg.opnsense.dnsmasq_boot:
        interface: "{{ item.value.opnsense_name }}"
        filename: "{{ item.value.tftp.file }}"
        address: "{{ item.value.tftp.server }}"
        description: "{{ item.value.name }}"
      loop: "{{ networks | ansible.builtin.dict2items }}"
      when: item.value.tftp is defined
      notify: Reload dnsmasq
      tags:
        - dnsmasq

    #           _                                    _
    # __      _(_)_ __ ___  __ _ _   _  __ _ _ __ __| |
    # \ \ /\ / | | '__/ _ \/ _` | | | |/ _` | '__/ _` |
    #  \ V  V /| | | |  __| (_| | |_| | (_| | | | (_| |
    #   \_/\_/ |_|_|  \___|\__, |\__,_|\__,_|_|  \__,_|
    #                      |___/

    - name: WireGuard - Home Instance
      oxlorg.opnsense.wireguard_server:
        name: Home
        public_key: LyOL+HkCzjVUGMoeSoYt2oLUO5Vu8SGUoguMtMcqxHg=
        private_key: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          61323235356335343663633631663166633632373532633166353333343162626437663262626234
          6138393932356430636139316538326336303338313061330a363837383533613230386534363563
          62313864316166373061636334646534326266383234666661666133363435613234323135643732
          3632376534656539640a626530633839376566666365623930306331616564343033623535653031
          62663963373334326261313638363539653363346463633035313838303037613463376336643836
          3735363738356534393261303962626562393463643331666336
        port: 51820
        tunnel_address: "{{ networks.vpn_home.subnet }}"
        link_peers: false
      tags:
        - wireguard

    - name: WireGuard - VPN Instance
      oxlorg.opnsense.wireguard_server:
        name: "{{ item.provider }}-{{ item.location }}"
        public_key: "{{ item.server.public_key }}"
        private_key: "{{ item.server.private_key }}"
        port: "{{ 51820 + ansible_loop.index }}"
        mtu: 1420
        tunnel_address: "{{ item.server.address }}/32"
        link_peers: false
        disable_routes: true
        gateway: "{{ item.server.address }}"
      loop: "{{ opnsense_wireguard_vpn }}"
      loop_control:
        extended: true
      tags:
        - wireguard

    - name: WireGuard - Peers
      oxlorg.opnsense.wireguard_peer:
        name: "{{ item.provider }}-{{ item.location }}"
        public_key: "{{ item.peer.public_key }}"
        endpoint: "{{ item.peer.endpoint }}"
        port: "{{ item.peer.port }}"
        allowed_ips: ["0.0.0.0/0"]
        keepalive: "{{ item.peer.keepalive }}"
        link_servers: true
        servers: ["{{ item.provider }}-{{ item.location }}"]
      loop: "{{ opnsense_wireguard_vpn }}"
      tags:
        - wireguard

    # An interface needs to be assigned and enabled manually for this step (API doesn't exist for that yet)
    # Also set the MSS on the interface to 1380

    - name: WireGuard - Gateway
      oxlorg.opnsense.gateway:
        name: "{{ item.provider | ansible.builtin.upper }}_{{ item.location | ansible.builtin.upper }}"
        interface: "{{ item.interface }}"
        ip_protocol: inet
        gateway: "{{ query('community.dns.lookup', item.peer.endpoint) | ansible.builtin.first }}"
        default_gw: false
        far_gw: true
        monitor_disable: false
        monitor: "{{ query('community.dns.lookup', item.peer.endpoint) | ansible.builtin.first }}"
        match_fields:
          - name
        priority: 255
      loop: "{{ opnsense_wireguard_vpn }}"
      tags:
        - wireguard
        - gateways

    - name: WireGuard - Firewall Rule
      oxlorg.opnsense.rule:
        rules:
          -
            sequence: 200
            quick: false
            interface: []
            action: pass
            source_net: "{{ item.interface }}ip"
            destination_net: "{{ item.interface }}"
            gateway: "{{ opnsense_wireguard_vpn[0].provider | ansible.builtin.upper }}_{{ opnsense_wireguard_vpn[0].location | ansible.builtin.upper }}"
            description: "{{ opnsense_wireguard_vpn[0].provider | ansible.builtin.upper }}_{{ opnsense_wireguard_vpn[0].location | ansible.builtin.upper }}"
      loop: "{{ opnsense_wireguard_vpn }}"
      notify: Reload firewall rules
      tags:
        - wireguard
        - firewall

    # - name: WireGuard - Next steps
    #   ansible.builtin.debug:
    #     msg:
    #       - Need to be done manually as the API doesn't exist
    #       - 1. Add NAT Outbound - https://opnsense-web.{{ common_local_tld }}/firewall_nat_out.php
    #   tags:
    #     - wireguard

    # - name: WireGuard - Add NAT rule
    #   oxlorg.opnsense.nat_source:
    #     interface: "{{ item.interface }}"
    #     source: "opt1"
    #     target: any
    #     description: "{{ opnsense_wireguard_vpn[0].provider | ansible.builtin.upper }}_{{ opnsense_wireguard_vpn[0].location | ansible.builtin.upper }}"
    #     match_fields: ["description"]
    #   loop: "{{ opnsense_wireguard_vpn }}"
    #   tags:
    #     - wireguard
    #     - firewall

    #            _       _                         _               _            _
    #  _   _  __| |_ __ | |__  _ __ ___   __ _  __| | ___ __ _ ___| |_ _ __ ___| | __ _ _   _
    # | | | |/ _` | '_ \| '_ \| '__/ _ \ / _` |/ _` |/ __/ _` / __| __| '__/ _ | |/ _` | | | |
    # | |_| | (_| | |_) | |_) | | | (_) | (_| | (_| | (_| (_| \__ | |_| | |  __| | (_| | |_| |
    #  \__,_|\__,_| .__/|_.__/|_|  \___/ \__,_|\__,_|\___\__,_|___/\__|_|  \___|_|\__,_|\__, |
    #             |_|                                                                   |___/

    - name: UDP Broadcast Relay - Firewall Rules
      oxlorg.opnsense.rule:
        rules:
          # Floating
          -
            sequence: 10
            interface: []
            action: pass
            protocol: UDP
            source_net: any
            destination_net: 239.255.255.250
            destination_port: 1900
            description: SSDP DLNA UPnP
          -
            sequence: 11
            interface: []
            action: pass
            protocol: UDP
            source_net: any
            destination_net: 224.0.0.251
            destination_port: 5353
            description: mDNS Multicast DNS

          # User
          -
            sequence: 10
            interface: "{{ networks.user.opnsense_identifier }}"
            action: pass
            protocol: TCP
            source_net: denon_avr
            source_port: denon_heos
            destination_net: "{{ networks.user.opnsense_identifier }}"
            destination_port: 30000-60000
            description: Denon HEOS

          # IOT
          -
            sequence: 10
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            protocol: UDP
            source_net: "{{ networks.user.opnsense_identifier }}"
            source_port: any
            destination_net: "{{ networks.iot.subnet | ansible.utils.ipaddr('broadcast') }}"
            destination_port: 30050
            description: Access to Daikin UDP Broadcast
          -
            sequence: 11
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            protocol: UDP
            source_net: 10.127.30.2
            source_port: any
            destination_net: "{{ networks.user.opnsense_identifier }}"
            destination_port: 30000
            description: Daikin Broadcast Response

          -
            sequence: 12
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            protocol: TCP
            source_net: denon_avr
            source_port: 51000-53000
            destination_net: "{{ networks.user.opnsense_identifier }}"
            destination_port: 49200
            description: Denon HEOS Response 1
          -
            sequence: 13
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            protocol: TCP
            source_net: denon_avr
            source_port: 56000-57000
            destination_net: "{{ networks.user.opnsense_identifier }}"
            destination_port: 49201
            description: Denon HEOS Response 2
      tags:
        - udpbroadcastrelay
        - firewall

    #   __ _                        _ _
    #  / _(_)_ __ _____      ____ _| | |
    # | |_| | '__/ _ \ \ /\ / / _` | | |
    # |  _| | | |  __/\ V  V | (_| | | |
    # |_| |_|_|  \___| \_/\_/ \__,_|_|_|

    - name: Firewall Rules - floating
      oxlorg.opnsense.rule:
        rules:
          -
            sequence: 1
            interface: []
            action: pass
            source_net: any
            destination_net: 10.127.20.10
            description: Printer access
          -
            sequence: 2
            interface: []
            action: pass
            source_net: homepage
            destination_net: homepage_targets
            description: Homepage Widgets
          -
            sequence: 3
            interface: []
            action: pass
            source_net: home_assistant
            destination_net: home_assistant_targets
            description: Home Assistant Integrations
          -
            sequence: 4
            interface:
              - "{{ networks.iot.opnsense_identifier }}"
              - "{{ networks.pub.opnsense_identifier }}"
            action: pass
            protocol: TCP/UDP
            source_net: "{{ networks.iot.opnsense_identifier }},{{ networks.pub.opnsense_identifier }}"
            destination_net: traefik
            destination_port: 443
            description: Allow Traefik HTTPS
          -
            sequence: 5
            interface:
              - "{{ networks.iot.opnsense_identifier }}"
              - "{{ networks.pub.opnsense_identifier }}"
            action: pass
            protocol: TCP
            source_net: "{{ networks.iot.opnsense_identifier }},{{ networks.pub.opnsense_identifier }}"
            destination_net: traefik
            destination_port: 80
            description: Allow Traefik HTTP
          -
            sequence: 6
            interface:
              - "{{ networks.iot.opnsense_identifier }}"
              - "{{ networks.pub.opnsense_identifier }}"
            action: pass
            source_net: bypass_vpn
            destination_invert: true
            destination_net: "rfc1918"
            gateway: "WAN"
            description: Bypass VPN
      notify: Reload firewall rules
      tags:
        - firewall

    - name: Firewall Rules - mgmt
      oxlorg.opnsense.rule:
        rules:
          -
            sequence: 1
            interface: "{{ networks.mgmt.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.mgmt.opnsense_identifier }}"
            destination_invert: true
            destination_net: "rfc1918"
            gateway: WAN
            description: Gateway
          -
            sequence: 2
            interface: "{{ networks.mgmt.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.mgmt.opnsense_identifier }}"
            destination_net: any
            description: Allow all
      notify: Reload firewall rules
      tags:
        - firewall

    - name: Firewall Rules - user
      oxlorg.opnsense.rule:
        rules:
          -
            sequence: 1
            interface: "{{ networks.user.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.user.opnsense_identifier }}"
            destination_invert: true
            destination_net: "rfc1918"
            gateway: WAN
            description: Gateway
          -
            sequence: 2
            interface: "{{ networks.user.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.user.opnsense_identifier }}"
            destination_net: any
            description: Allow all
      notify: Reload firewall rules
      tags:
        - firewall

    - name: Firewall Rules - iot
      oxlorg.opnsense.rule:
        rules:
          -
            sequence: 1
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.iot.opnsense_identifier }}"
            destination_net: "{{ networks.iot.opnsense_identifier }}"
            description: Allow same network
          -
            sequence: 2
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.iot.opnsense_identifier }}"
            destination_net: "{{ networks.pub.opnsense_identifier }}"
            description: Allow pub network
          -
            sequence: 3
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            protocol: "TCP"
            source_net: "{{ networks.iot.opnsense_identifier }}"
            destination_net: calvin_pc
            destination_port: nvidia_gamestream_tcp
            description: Allow NVIDIA Gamestream TCP
          -
            sequence: 4
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            protocol: "UDP"
            source_net: "{{ networks.iot.opnsense_identifier }}"
            destination_net: calvin_pc
            destination_port: nvidia_gamestream_udp
            description: Allow NVIDIA Gamestream UDP
          -
            sequence: 100
            interface: "{{ networks.iot.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.iot.opnsense_identifier }}"
            destination_invert: true
            destination_net: "rfc1918"
            gateway: "{{ opnsense_wireguard_vpn[0].provider | ansible.builtin.upper }}_{{ opnsense_wireguard_vpn[0].location | ansible.builtin.upper }}"
            description: Gateway
      notify: Reload firewall rules
      tags:
        - firewall

    - name: Firewall Rules - pub
      oxlorg.opnsense.rule:
        rules:
          -
            sequence: 1
            interface: "{{ networks.pub.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.pub.opnsense_identifier }}"
            destination_net: "{{ networks.pub.opnsense_identifier }}"
            description: Allow same network
          -
            sequence: 2
            interface: "{{ networks.pub.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.pub.opnsense_identifier }}"
            destination_net: "{{ networks.iot.opnsense_identifier }}"
            description: Allow iot network
          -
            sequence: 100
            interface: "{{ networks.pub.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.pub.opnsense_identifier }}"
            destination_invert: true
            destination_net: "rfc1918"
            gateway: "{{ opnsense_wireguard_vpn[0].provider | ansible.builtin.upper }}_{{ opnsense_wireguard_vpn[0].location | ansible.builtin.upper }}"
            description: Gateway
      notify: Reload firewall rules
      tags:
        - firewall

    - name: Firewall Rules - guest
      oxlorg.opnsense.rule:
        rules:
          -
            sequence: 1
            interface: "{{ networks.guest.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.guest.opnsense_identifier }}"
            destination_invert: true
            destination_net: "rfc1918"
            gateway: WAN
            description: Gateway
          -
            sequence: 2
            interface: "{{ networks.guest.opnsense_identifier }}"
            action: pass
            source_net: "{{ networks.guest.opnsense_identifier }}"
            destination_net: "{{ networks.guest.opnsense_identifier }}"
            description: Allow same network
      notify: Reload firewall rules
      tags:
        - firewall
