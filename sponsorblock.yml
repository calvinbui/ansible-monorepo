---

- hosts: homelab

  vars:
    application: sponsorblock

    docker_network: "{{ networks.pub }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0771"

    - name: Create postgres container
      ansible.builtin.import_role:
        name: postgres
      vars:
        postgres_version: 13
        postgres_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          61376330616237643331303466383038343038623636653663313039383135313535313166663232
          6136393838343132346534636361383665656534636130610a373963613830626538666138396461
          65363266336262646637386534393636666238666636353839356365333035393163656331363838
          6437613434316261620a373237303737343666383465326436386630353964646165326530633837
          61373166343366353831666532623438643032353833326438616665346164363139356533636635
          38313933633266633730343031396336376464313762316135356536643731326133376137643565
          31623039333665653263626532383138353734663761333866643732363230373661303864353561
          32376666633533633535
        postgres_directory_extra:
          - "{{ _config_dir.path }}/mirror/:/mirror"

    - name: Create mirror container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        name: "{{ application }}-mirror"
        image: ghcr.io/mchangrh/sb-mirror:latest
        env:
          SQLITE: "FALSE"
          # MIRROR_URL: "sponsor.ajay.app"
          MIRROR: "TRUE"
        volumes:
          - "{{ _config_dir.path }}/mirror/:/mirror"
          - "{{ _config_dir.path }}/export/:/export"

    - name: Create postgres-config.json
      ansible.builtin.copy:
        content: |
          {
            "port": 8080,
            "globalSalt": "{{ salt }}",
            "adminUserID": "c132d179bfa6a48f4014c163e4f530ecb401f505cf2e5fd02f5b1bb55ac97f5c",
            "behindProxy": true,
            "postgres": {
              "user": "{{ _postgres_username }}",
              "password": "{{ _postgres_password }}",
              "host": "{{ _postgres_hostname }}",
              "port": {{ _postgres_port }}
            },
            "mode": "mirror",
            "dumpDatabase": {
              "postgresExportPath": "/mirror"
            }
          }
        dest: "{{ _config_dir.path }}/config.json"
        mode: "0775"
        owner: "{{ common_user }}"
        group: "{{ common_root_group }}"
      vars:
        salt: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          36653030326234666637396131363666316239363032396434323237643930643035373236303631
          6664623639626236373263653131393830613962353964310a306264656266353439323866323066
          36326164626531353964623638363534663330373332396663353266663766366631663035623462
          6139363664303033370a343566323962646366643533356562626364396136373065646666363730
          61356462336161396239336463343938613531653864313936343865306436663633366135346538
          33643163656533666666396361623066323561383262316264333139656161646638336132363961
          63316366613461653538656166373761613438663465323239353461373134646638373566313335
          34383336393362636137

    - name: Create server container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        name: "{{ application }}-server"
        image: ghcr.io/mchangrh/sb-server-runner:latest
        volumes:
          - "{{ _config_dir.path }}/export:/app/database"
          - "{{ _config_dir.path }}/config.json:/app/config.json"
        traefik:
          - port: 8080
