---

- hosts: homelab

  vars:
    application: bazarr

    docker_network: "{{ networks.pub }}"

  handlers:
    - name: Restart
      community.docker.docker_container:
        name: "{{ application }}"
        restart: true
        comparisons:
          '*': ignore

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_root_group }}"
        mode: "0771"

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: lscr.io/linuxserver/bazarr:1.2.4
        volumes:
          - "{{ config_directory }}:/config"
          - "{{ common_directory_tv }}:{{ common_mounted_directory_tv }}"
          - "{{ common_directory_movies }}:{{ common_mounted_directory_movies }}"
        env:
          PUID: "{{ common_user_id | string }}"
          PGID: "{{ common_root_group | string }}"
          TZ: "{{ common_timezone }}"
        traefik:
          - port: 6767
            auth: basic
        homer:
          name: Bazarr
          service: Download
          priority: 690
          subtitle: "Manage and download subtitles"

    - name: If "{{ application }}" has not been configured, go through the initial setup to generate a configuration file.
      ansible.builtin.wait_for:
        path: "{{ config_directory }}/config/config.ini"
        state: present

    - name: Configure
      community.general.ini_file:
        path: "{{ config_directory }}/config/config.ini"
        section: "{{ item.key.split('.')[0] }}"
        option: "{{ item.key.split('.')[1] }}"
        value: "{{ item.value | string }}"
        owner: "{{ common_user }}"
        group: "{{ common_root_group }}"
        mode: "0664"
      loop: "{{ _bazarr_config | dict2items }}"
      notify: Restart
      vars:
        _bazarr_config:
          analytics.enabled: "False"

          general.single_language: "True"
          general.upgrade_manual: "False"
          general.upgrade_subs: "False"

          general.use_sonarr: "True"
          sonarr.ip: "sonarr.{{ docker_network.name }}"
          sonarr.apikey: "{{ sonarr_api_key }}"
          general.path_mappings: "[['/tv', '/tv'], ['', ''], ['', ''], ['', ''], ['', '']]"
          general.serie_default_enabled: "True"
          general.serie_default_language: "['en']"

          general.use_radarr: "True"
          radarr.apikey: "{{ radarr_api_key }}"
          radarr.ip: "radarr.{{ docker_network.name }}"
          general.path_mappings_movie: "[['/movies', '/movies'], ['', ''], ['', ''], ['', ''], ['', '']]"
          general.movie_default_enabled: "True"
          general.movie_default_language: "['en']"

          general.enabled_providers: "['opensubtitlescom']"
          opensubtitlescom.username: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            35313938306365353935653763316133393663613038303363646435333030363966636664656262
            3162633637633737303131643438306539333234646239640a383135366532633433623561343032
            32393232663765653264386234393838633831646465303832613935376637303438383965626365
            3537663737656337360a643062303766316132643639366164373664313661666264643837396535
            33363030326635666232313731343430623661656338333866653633636635666365
          opensubtitlescom.password: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            32306537663434656133316230383939376133613234316137306131313636643435383437396335
            3133333135303234363835343039363565383665633437650a343632356433376131393331653936
            64653031646462316466343235366536313537373234373038663539383762326661626133663236
            3536306464613064360a663537303961323862366339663864326139626165653432313762373562
            6533
          opensubtitlescom.use_hash: "False"
