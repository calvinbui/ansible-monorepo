---

- hosts: homeserver

  vars:
    application: plex

    plex_pfx_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      65626535306466393430666561616366383036373732313665336561313838623836623563363265
      3533383166303335633663363539346134636431316438320a323935616331333431323136393935
      35616133376435373631393931653631643031633538393830646630303832396664376439366136
      3438366139653530630a626266613966333236653063366364663261303139623463653237646431
      63663339666561333530616231366161616532306630363462326233663639333461

    container_network: "{{ networks.pub }}"

  handlers:
    - name: Restart
      containers.podman.podman_container:
        name: "{{ application }}"
        force_restart: true

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_group_id }}"
        mode: "0771"

    - name: Create acme.sh folder
      ansible.builtin.file:
        path: "{{ config_directory }}/acme.sh"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_group_id }}"
        mode: "0771"
      tags:
        - acme

    - name: Create acme.sh container
      ansible.builtin.include_role:
        name: podman_container
      vars:
        container_name: "{{ application }}-acme"
        image: docker.io/neilpang/acme.sh:3.1.1
        command: daemon
        volumes:
          - "{{ config_directory }}/acme.sh:/acme.sh"

    - name: Issue plex cert
      containers.podman.podman_container_exec:
        name: "{{ application }}-acme"
        argv:
          - /bin/sh
          - -c
          - |
            acme.sh \
              --issue \
              --server letsencrypt \
              --email letsencrypt{{ common_email_to }} \
              --dns dns_cf \
              --domain "${CERT_DOMAIN}" \
              --keylength ec-384 \
              --post-hook "acme.sh --toPkcs --domain ${CERT_DOMAIN} --password {{ plex_pfx_password }} --ecc && mv /acme.sh/${CERT_DOMAIN}_ecc/${CERT_DOMAIN}.pfx /acme.sh/${CERT_DOMAIN}_ecc/${CERT_DOMAIN}.p12 && chown 1000:0 /acme.sh/${CERT_DOMAIN}_ecc/${CERT_DOMAIN}.p12"
        env:
          CERT_DOMAIN: "{{ application }}.{{ common_tld }}"
          CF_Token: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            65373761363864376266316264313165663331386666666631336262353930326365336437313730
            6239353539633765383734626633333066326237623363610a643032393737353566626463306666
            33383830336533393736366130316238646462366462333165376364323863316564643631316237
            6634323432366564650a613831646562643965316539303361643532666562636135373864373630
            37323864616331343634373363346162366162343633396132343036626163333335663366393634
            3831373938336232353564336335356631393036643739626566
          CF_Account_ID: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            35303639666236346666646264613132353163393232323234323738303661373635666635626130
            3531613532363832373532343431346134316230666535640a646561626130336531653431396366
            62336264346461396431383235393932336236363033363439373432323566343936613364616132
            3939613939626530320a316334323161356534323864613339323138343162643538393839643239
            39616233356561316239633935646332343536333639323833346531373431633164373264396664
            3535663734313063323732616530323830646538323634633337
      register: _result
      failed_when: _result.rc not in [0, 2]
      changed_when: _result.rc == 0
      tags:
        - acme

    - name: Create container
      ansible.builtin.include_role:
        name: podman_container
      vars:
        image: docker.io/plexinc/pms-docker:1.42.1.10060-4e8b05daf
        ip: "{{ container_network.subnet | ansible.utils.nthhost(4) }}"
        group_add:
          - 992 # 'render'
        env:
          PLEX_UID: "{{ common_user_id | ansible.builtin.string }}"
          PLEX_GID: "{{ common_root_group | ansible.builtin.string }}"
          TZ: "{{ common_timezone }}"
          PLEX_CLAIM: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            39376338353761616462376333313233633831333139613830383033383835323865376635653435
            6530363734373465313565633362633333646439396235620a303962333437666538656661636534
            37653637623934396461346436663062363435393564353534333562353831393565326137313465
            3237303635363735300a316638646332323466656362393361336164373462613736626663616531
            63663265366531343162643237613364313661313437353261366432333066383635
        volumes:
          - "{{ config_directory }}:/config"
          - "{{ common_directory_movies }}:/data/movies"
          - "{{ common_directory_tv }}:/data/tv"
        tmpfs:
          /transcode: rw,mode=01777
        device:
          - /dev/dri:/dev/dri
        traefik:
          - port: 32400
        blackbox:
          path: /identity
        homepage:
          group: Plex
          href: "https://{{ application }}.{{ common_tld }}:32400"
          weight: 500
          description: "Media server"
          widget:
            key: "{{ plex_token }}"
            fields: '["streams", "movies", "tv"]'

    - name: Configure
      community.general.xml:
        path: "{{ config_directory }}/Library/Application Support/Plex Media Server/Preferences.xml"
        xpath: "/Preferences"
        attribute: "{{ item.attribute }}"
        value: "{{ item.value | ansible.builtin.string }}"
      loop:
        # General
        -
          attribute: FriendlyName
          value: "{{ application }}"
        -
          attribute: sendCrashReports
          value: "0"
        -
          attribute: logDebug
          value: "0"
        -
          attribute: LogVerbose
          value: "0"

        # Remote Access
        -
          attribute: ManualPortMappingMode
          value: "1"
        -
          attribute: ManualPortMappingPort
          value: "32400"

        # Network
        -
          attribute: EnableIPv6
          value: "0"
        -
          attribute: IPNetworkType
          value: "v4only"
        -
          attribute: secureConnections
          value: "1"
        -
          attribute: customCertificatePath
          value: "/config/acme.sh/{{ application }}.{{ common_tld }}_ecc/{{ application }}.{{ common_tld }}.p12"
        -
          attribute: customCertificateDomain
          value: "{{ application }}.{{ common_tld }}"
        -
          attribute: customCertificateKey
          value: "{{ plex_pfx_password }}"
        -
          attribute: DisableTLSv1_0
          value: "1"
        -
          attribute: WanPerUserStreamCount
          value: "3"
        -
          attribute: LanNetworksBandwidth
          value: "192.168.0.0/16"
        -
          attribute: TranscodeCountLimit
          value: "0"
        -
          attribute: TreatWanIpAsLocal
          value: "1"
        -
          attribute: RelayEnabled
          value: "0"
        -
          attribute: customConnections
          value: "https://{{ application }}.{{ common_tld }}:32400,https://{{ application }}.{{ common_tld }}:443"

        # Transcoder
        -
          attribute: TranscoderQuality
          value: "0"
        -
          attribute: TranscoderTempDirectory
          value: "/transcode"
        -
          attribute: TranscoderToneMapping
          value: "0"
        -
          attribute: HardwareAcceleratedCodecs
          value: "1"

        # DLNA
        -
          attribute: DlnaEnabled
          value: "0"
