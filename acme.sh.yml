---

- hosts: homelab:octopi

  vars:
    acme_dir: "{{ common_directory }}/acme.sh"
    acme_repo_dir: "{{ acme_dir }}/repo"
    acme_install_dir: "{{ acme_dir }}/install"
    acme_cert_dir: "{{ acme_dir }}/certs"
    acme_config_dir: "{{ acme_dir }}/config"
    acme_scripts_dir: "{{ acme_dir }}/scripts"
    cert_cloudflare_email: "{{ cloudflare_email }}"
    cert_cloudflare_api_token: "{{ cloudflare_api }}"

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 600
      changed_when: false
      when: ansible_distribution == "Ubuntu"

    # https://github.com/Neilpang/acme.sh/wiki/How-to-install
    - name: Install socat
      ansible.builtin.apt:
        name: socat
        state: present
      when: ansible_os_family == "Ubuntu"

    - name: Download Neilpang's acme.sh
      ansible.builtin.git:
        repo: https://github.com/acmesh-official/acme.sh.git
        dest: "{{ acme_repo_dir }}"
        version: 2.9.0

    - name: Setup acme.sh
      ansible.builtin.shell: |
        ./acme.sh --install \
        --home "{{ acme_install_dir }}" \
        --config-home "{{ acme_config_dir }}" \
        --cert-home "{{ acme_cert_dir }}" \
        --accountemail "{{ common_email_username }}"
      args:
        chdir: "{{ acme_repo_dir }}"
        executable: "/bin/bash"
      changed_when: false

    - name: Create scripts directories
      ansible.builtin.file:
        path: "{{ acme_scripts_dir }}"
        state: directory

    - name: Copy scripts
      ansible.builtin.copy:
        src: "files/acme.sh/{{ item.script }}"
        dest: "{{ acme_scripts_dir }}/{{ item.script }}"
        mode: 0755
      loop: "{{ cert_domains }}"

    - name: Setup Cloudflare creds
      ansible.builtin.lineinfile:
        path: "{{ acme_config_dir }}/account.conf"
        regex: "{{ item.regex }}"
        line: "{{ item.line }}"
      loop:
        - regex: "^SAVED_CF_Key"
          line: "SAVED_CF_Key='{{ cert_cloudflare_api_token }}'"
        - regex: "^SAVED_CF_Email"
          line: "SAVED_CF_Email='{{ cert_cloudflare_email }}'"

    - name: Generate certs for each domain
      ansible.builtin.shell: /bin/bash -ic ". acme.sh.env && acme.sh --issue {{ item.method }} --domain {{ item.domain }} --post-hook '{{ acme_scripts_dir }}/{{ item.script }} {{ item.script_args }}'"
      args:
        chdir: "{{ acme_install_dir }}"
        executable: /bin/bash
      register: result
      loop: "{{ cert_domains }}"
      failed_when: result.rc == 1 or result.rc == 127
      changed_when: result.rc == 0
