---
- hosts: homelab
  become: true
  vars:
    network: "{{ networks.iot }}"
    recording_device: LABEL=recordings
    recording_path: /mnt/recordings
    blueiris_config_directory: "{{ recording_path }}"
  pre_tasks:
    - mount:
        path: "{{ recording_path }}"
        src: "{{ recording_device }}"
        fstype: "ext4"
        boot: true
        state: mounted
  tasks:
    - name: Create Blue Iris directory
      file:
        path: "{{ blueiris_config_directory }}"
        state: directory

    - name: Template supervisord config
      template:
        src: templates/blueiris/supervisord.conf.j2
        dest: "{{ blueiris_config_directory }}/supervisord.conf"

    - name: Create Blue Iris container
      docker_container:
        name: blueiris
        image: jshridha/blueiris
        state: started
        volumes:
          - "{{ blueiris_config_directory }}/blueiris:/root/prefix32:rw"
          - /etc/localtime:/etc/localtime:ro
          - "{{ blueiris_config_directory }}/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf"
        pull: true
        hostname: blueiris
        restart_policy: unless-stopped
        networks_cli_compatible: true
        purge_networks: true
        comparisons:
          labels: strict
        dns_servers: "{{ network.dns }}"
        networks:
          - name: "{{ network.name }}"
            ipv4_address: "{{ network.prefix }}.2"
        labels:
          traefik.enable: "false"

    - name: Copy NGINX config
      template:
        src: templates/blueiris/nginx.conf
        dest: "{{ blueiris_config_directory }}/nginx.conf"

    - name: Create Docker NGINX proxy
      docker_container:
        name: blueiris-proxy
        image: nginx
        state: started
        volumes:
          - "{{ blueiris_config_directory }}/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
        hostname: blueiris-proxy
        restart_policy: unless-stopped
        networks_cli_compatible: true
        purge_networks: true
        comparisons:
          labels: strict
        dns_servers: "{{ network.dns }}"
        networks:
          - name: "{{ network.name }}"
            ipv4_address: "{{ network.prefix }}.3"
        labels:
          traefik.http.routers.blueiris.entrypoints: "web"
          traefik.http.routers.blueiris.middlewares: "redirect@file"

          traefik.http.routers.blueiris-secure.entrypoints: "web-secure"
          traefik.http.routers.blueiris-secure.tls: "true"
          traefik.http.routers.blueiris-secure.tls.certresolver: letsencrypt

          traefik.http.services.blueiris.loadbalancer.server.port: "80"

          traefik.http.routers.blueiris.rule: "Host(`blueiris.{{ common_tld }}`)"
          traefik.http.routers.blueiris-secure.rule: "Host(`blueiris.{{ common_tld }}`)"

