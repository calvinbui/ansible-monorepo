---

# fails if more than 1 result
- name: Find logo file extension
  local_action:
    module: ansible.builtin.find
    path: "{{ homer_logos_local_dir }}"
    patterns: "^{{ application }}.(png|svg|jpg|jpeg)"
    file_type: file
    use_regex: true
  register: _homer_logo_local
  when:
    - homer['icon'] is not defined
  failed_when: _homer_logo_local.files|length != 1
  become: false

- name: Upload logo to Homer
  ansible.builtin.copy:
    src: "{{ _homer_logo_local.files.0.path }}"
    dest: "{{ homer_logos_remote_dir }}"
    owner: "{{ common_user_id }}"
    group: "{{ common_group_id }}"
    mode: "0775"
  failed_when: false
  when:
    - homer['icon'] is not defined

- name: Add Homer labels
  when: (homer[item.label] is defined) or (item.default is defined)
  ansible.builtin.set_fact:
    homer_labels: "{{ homer_labels | default({}) | combine({ 'homer.' + item.label : (homer[item.label] | default(item.default) | string ) }) }}"
  loop: "{{ _labels }}"
  vars:
    _labels:
      - label: enable
        default: 'true'
      - label: service
      - label: priority
      - label: name
        default: "{{ app_name }}"
      - label: logo
        default: "{{ (homer_logos_container_dir  + '/' + _homer_logo_local.files.0.path.split('/')[-1]) if homer['icon'] is not defined else omit }}"
      - label: icon
      - label: subtitle
      - label: tag
      - label: url
        default: "https://{{ app_name + '.' + common_tld }}"
      - label: target
      - label: tagstyle
      - label: type
      - label: class
      - label: background
