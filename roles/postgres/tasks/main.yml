---

- name: Create Postgres data directory
  ansible.builtin.file:
    path: "{{ postgres_directory }}"
    state: directory
    owner: 999
    group: 999
    mode: "0700"

- name: Create Postgres container
  community.docker.docker_container:
    name: "{{ postgres_name }}"
    image: "{{ postgres_image }}:{{ postgres_version }}"

    state: started

    hostname: "{{ postgres_name }}"
    published_ports: "{{ postgres_ports | ansible.builtin.default(omit) }}"
    networks:
      - name: "{{ docker_network.name | ansible.builtin.default('bridge') }}"
    network_mode: "{{ docker_network.name | ansible.builtin.default('omit') }}"
    networks_cli_compatible: "{{ postgres_networks_cli_compatible | ansible.builtin.default(true) }}"

    command: "{{ postgres_command | ansible.builtin.default(omit) }}"

    volumes: "{{ postgres_directories }}"

    # https://github.com/docker-library/docs/blob/master/postgres/README.md#environment-variables
    env:
      POSTGRES_USER: "{{ postgres_user }}"
      POSTGRES_PASSWORD: "{{ postgres_password }}"
      POSTGRES_DB: "{{ postgres_database }}"
      TZ: "{{ common_timezone }}"
      POSTGRES_INITDB_ARGS: "{{ postgres_initdb_args | ansible.builtin.default(omit) }}"
      LC_COLLATE: "{{ lc_collate | ansible.builtin.default(omit) }}"
      LC_CTYPE: "{{ lc_ctype | ansible.builtin.default(omit) }}"
      POSTGRES_HOST_AUTH_METHOD: "{{ postgres_host_auth_method | ansible.builtin.default(omit) }}"

    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 30s
      timeout: 20s
      retries: 3

    labels:
      traefik.enable: "false"

    restart_policy: unless-stopped

    container_default_behavior: "{{ container_default_behavior | ansible.builtin.default('no_defaults') }}"

    comparisons:
      env: allow_more_present
      labels: strict
      networks: strict

  register: postgres_container

- name: Set variables
  ansible.builtin.set_fact:
    _postgres_hostname: "{{ postgres_name }}.{{ docker_network.name }}"
    _postgres_port: "5432"
    _postgres_username: "{{ postgres_user }}"
    _postgres_password: "{{ postgres_password }}"
    _postgres_database: "{{ postgres_database }}"

- name: Set connection URL variable
  ansible.builtin.set_fact:
    _postgres_url: "postgres://{{ _postgres_username }}:{{ _postgres_password }}@{{ _postgres_hostname }}:{{ _postgres_port }}/{{ _postgres_database }}"
    _postgresql_url: "postgresql://{{ _postgres_username }}:{{ _postgres_password }}@{{ _postgres_hostname }}:{{ _postgres_port }}/{{ _postgres_database }}"

- name: Wait for postgres to come up
  ansible.builtin.pause:
    seconds: 10
  when: postgres_container.changed
