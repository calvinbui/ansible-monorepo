---
- hosts: homelab
  become: true
  vars:
    application: mattermost

    postgres_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      66636138626433383439313439353435373036616161646536333333363464383163336361613931
      3361653330393532623865393836336434363162663635330a323366346464326634373038366630
      38323236366237633331306434366464666564376337623930386163323466623538393037333131
      6234393131386537310a346562323563663637393763653961376137613538316638653165363637
      38646136363563656132303534333630343136363536343666663230633466333736

    docker_network: "{{ networks.pub }}"

  pre_tasks:
    - name: Create config directory
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_root_group }}"
        mode: "0771"

  tasks:
    - name: Create postgres container
      ansible.builtin.include_role:
        name: postgres
      vars:
        postgres_name: "{{ application }}-postgres"
        postgres_version: '12'
        postgres_directory: "{{ config_directory }}/postgres"
        postgres_environment_variables:
          POSTGRES_USER: "{{ application }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
          POSTGRES_DB: "{{ application }}"

    - name: Create app directories
      ansible.builtin.file:
        path: "{{ config_directory }}/mattermost/{{ item }}"
        state: directory
        recurse: true
        owner: "2000"
        group: "2000"
      loop:
        - config
        - data
        - logs
        - plugins
        - client-plugins

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: mattermost/mattermost-team-edition:5
        volumes:
          - "{{ config_directory }}/mattermost/config:/mattermost/config"
          - "{{ config_directory }}/mattermost/data:/mattermost/data"
          - "{{ config_directory }}/mattermost/logs:/mattermost/logs"
          - "{{ config_directory }}/mattermost/plugins:/mattermost/plugins"
          - "{{ config_directory }}/mattermost/client-plugins:/mattermost/client/plugins"
          - /etc/localtime:/etc/localtime:ro
        env:
          # set same as db credentials and dbname
          MM_USERNAME: "{{ application }}"
          MM_PASSWORD: "{{ postgres_password }}"
          MM_DBNAME: "{{ application }}"
          DB_HOST: "{{ application }}-postgres.{{ docker_network.name }}"
          DB_PORT_NUMBER: "5432"
          MM_SQLSETTINGS_DRIVERNAME: postgres
          MM_SQLSETTINGS_DATASOURCE: "postgres://{{ application }}:{{ postgres_password }}@{{ application }}-postgres.{{ docker_network.name }}:5432/{{ application }}?sslmode=disable&connect_timeout=10"
        traefik:
          - port: "8065"
        comparisons:
          env: strict
          labels: strict
