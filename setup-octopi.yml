---

# Download and install OctoPi from https://github.com/OctoPrint/OctoPi-UpToDate
# On the first Ansible run, use `-K`

- hosts: octopi

  vars:
    application: octopi

    common_user: pi

    octopi_mattermost_hook: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      65646232623931316138666530363335326435386464613864343639313166656164646632386262
      3632333334653863373336306635323135313261383630370a373362386265363931376532366331
      38353762343166633036663634353138343233393065613031623731333239356335323564626434
      3834366538393035620a323461313739393362343962666363356463636561633562306439626631
      33636331613032343665353233303662633438356538376565363036393561333731

    octodash_api_key: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      62636163363931333466386636393564353064313264396532303639653461373635376362383136
      3437626433333037326563353962363561636138316334330a306537663930346230383235353762
      33363133376365346338616633613037616564646331353230323562656439663730636561613534
      3833633830626433320a326464323131623732396637353865366264666664396464613436383664
      35363835313564623031393563306666303763333330343932653639316537376230633135383135
      6230326261396163653438323762353864303933323131333637

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        reboot_timeout: 360

    - name: Restart OctoPrint
      ansible.builtin.service:
        name: octoprint
        state: restarted

  tasks:
    - name: Disable requiretty to enable Ansible pipelining
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        line: "{{ item.line }}"
        state: "{{ item.state }}"
      loop:
        - line: Defaults requiretty
          state: absent
        - line: Defaults !requiretty
          state: present
      vars:
        ansible_ssh_pipelining: false

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 86400
      changed_when: false

    - name: Set authorized keys
      ansible.posix.authorized_key:
        user: "{{ item }}"
        state: present
        key: https://github.com/calvinbui.keys
        comment: github keys
      loop:
        - root
        - "{{ common_user }}"

    - name: No password sudo
      community.general.sudoers:
        name: "{{ common_user }}"
        user: "{{ common_user }}"
        commands: ALL
        nopassword: true

    - name: Install apt packages
      ansible.builtin.apt:
        name:
          - neovim
          - htop
          - iftop
          - nano
          - tree
          - unzip
          - ncdu
          - curl
          - wget
          - dnsutils
          - git
          - avrdude
          - python3-yaml
        state: present

    - name: Remove packages
      ansible.builtin.apt:
        name:
          - popularity-contest
          - pastebinit
        state: present

    - name: Set timezone
      community.general.timezone:
        name: "{{ common_timezone }}"

    - name: Remove git sanity check
      ansible.builtin.file:
        path: /root/bin/git
        state: absent

    - name: OctoDash installation and configuration
      block:
        # https://github.com/UnchartedBull/OctoDash/wiki/Installation#manual-installation
        - name: Install OctoDash dependencies
          ansible.builtin.apt:
            name:
              - libgtk-3-0
              - libnotify4
              - libnss3
              - libxss1
              - libxtst6
              - xdg-utils
              - libatspi2.0-0
              - libuuid1
              - libappindicator3-1
              - libsecret-1-0

              # packages below needed for starting octodash on boot
              - xserver-xorg
              - ratpoison
              - x11-xserver-utils
              - xinit
              - libgtk-3-0
              - xdotool

        - name: Install OctoDash
          ansible.builtin.apt:
            deb: "https://github.com/UnchartedBull/OctoDash/releases/download/v2.3.1/octodash_2.3.1_armv7l.deb"
          notify: Reboot

        - name: Enable Console Autologin
          ansible.builtin.command: sudo raspi-config nonint do_boot_behaviour B2
          become: true
          become_user: "{{ common_user }}"
          changed_when: false

        - name: Create .xinitrc file
          ansible.builtin.copy:
            content: |
              #!/bin/sh

              xset s off
              xset s noblank
              xset -dpms

              ratpoison&
              octodash
            dest: "/home/{{ common_user }}/.xinitrc"
            mode: "0755"
            owner: "{{ common_user }}"
            group: "{{ common_user }}"

        - name: Make xinit autostart on boot
          ansible.builtin.blockinfile:
            block: |
              if [ -z "$SSH_CLIENT" ] || [ -z "$SSH_TTY" ]; then
                xinit -- -nocursor
              fi
            path: "/home/{{ common_user }}/.bashrc"

        - name: Create OctoDash config directory
          ansible.builtin.file:
            path: "/home/pi/.config/octodash/"
            state: directory
            owner: "{{ common_user }}"
            group: "{{ common_user }}"
            mode: "0700"

        - name: Configure OctoDash
          ansible.builtin.template:
            src: "{{ files_directory }}/octodash/config.json.j2"
            dest: "/home/{{ common_user }}/.config/octodash/config.json"
            owner: "{{ common_user }}"
            group: "{{ common_user }}"
            mode: "0740"
          notify: Reboot

        - name: Rotate X11 for Octodash
          ansible.builtin.copy:
            content: |
              Section "Monitor"
                Identifier "DPI-1"
                Option "Rotate" "left"
              EndSection
            dest: "/usr/share/X11/xorg.conf.d/88-dsi-1-rotate.conf"
            mode: "0644"
            owner: "root"
            group: "root"
          notify: Reboot

        - name: Fix touchscreen input for rotated screen
          ansible.builtin.copy:
            content: |
              Section "InputClass"
                Identifier "HyperPixel4 Goodix Capacitive TouchScreen"
                MatchProduct "Goodix Capacitive TouchScreen"
                Option "CalibrationMatrix" "1 0 0 0 1 0 0 0 1"
                Option "TransformationMatrix" "0 -1 1 1 0 0 0 0 1"
              EndSection
            dest: "/usr/share/X11/xorg.conf.d/88-hyperpixel4-touch.conf"
            mode: "0644"
            owner: "root"
            group: "root"
          notify: Reboot

    # see options using `v4l2-ctl --all`
    - name: Disable webcam autofocus and set manual focus
      ansible.builtin.lineinfile:
        path: /etc/rc.local
        insertbefore: exit 0
        line: "{{ item }}"
      loop:
        - v4l2-ctl --set-ctrl=focus_automatic_continuous=0
        - v4l2-ctl --set-ctrl=focus_absolute=4

    # https://github.com/pimoroni/hyperpixel4/issues/177
    - name: Enable HyperPixel display
      community.general.ini_file:
        path: /boot/config.txt
        section: null
        option: dtoverlay
        value: "{{ item }}"
        state: present
        no_extra_spaces: true
        mode: "0755"
        exclusive: false
      loop:
        - vc4-kms-v3d
        - vc4-kms-dpi-hyperpixel4,rotate=270
      notify: Reboot

    - name: Install plugins
      ansible.builtin.pip:
        name: "{{ item }}"
        executable: "/home/{{ common_user }}/oprint/bin/pip"
        state: present
      become_user: "{{ common_user }}"
      become: false
      loop:
        - https://github.com/TheSpaghettiDetective/OctoPrint-Obico/archive/master.zip
        - https://github.com/jneilliii/OctoPrint-OctoDashCompanion/archive/master.zip
        - https://github.com/jneilliii/OctoPrint-TPLinkSmartplug/archive/master.zip
        - https://github.com/OllisGit/OctoPrint-DisplayLayerProgress/releases/latest/download/master.zip
        - https://github.com/marian42/octoprint-preheat/archive/master.zip
        - https://github.com/eyal0/OctoPrint-PrintTimeGenius/archive/master.zip
        - https://github.com/jneilliii/OctoPrint-PrusaSlicerThumbnails/archive/master.zip
        - https://github.com/fraschetti/Octoslack/archive/master.zip
      notify: Restart OctoPrint

    - name: Check if config is ready for updating
      yedit: # noqa fqcn[action]
        src: "/home/{{ common_user }}/.octoprint/config.yaml"
        key: appearance.color
        state: list
      register: _octoprint_config_ready

    - name: Prompt to go through startup process
      ansible.builtin.pause:
        prompt: "Go through the setup process https://{{ application }}.{{ common_local_tld }} save the config first"
      when: _octoprint_config_ready.result != "black"

    - name: Configure OctoPrint
      yedit: # noqa fqcn[action]
        src: "/home/{{ common_user }}/.octoprint/config.yaml"
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      notify: Restart OctoPrint
      loop: "{{ _octoprint_config | ansible.builtin.dict2items }}"
      vars:
        _octoprint_config:
          api.allowCrossOrigin: true

          appearance:
            color: black
            defaultLanguage: en
            fuzzyTimes: false
            showInternalFilename: false

          feature:
            modelSizeDetection: false
            sdSupport: false

          plugins.DisplayLayerProgress:
            showAllPrinterMessages: false
            showOnBrowserTitle: false
            showOnNavBar: false

          plugins.Octoslack.channel: 3d-printing
          plugins.Octoslack.connection_method: WEBHOOK
          plugins.Octoslack.include_raspi_temp: false
          plugins.Octoslack.mattermost_compatability_mode: true
          plugins.Octoslack.minio_config:
            AccessKey: XqmnkyiQ0sy9uhMRFlQw
            Bucket: octoprint
            Endpoint: minio.{{ common_tld }}
            SecretKey: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              35333065386639356632386239343435316237323832373630393464326530623235653264323634
              3338626336656138663832616363653162636538613161390a373035653262366231616534613630
              61613537646438643232643764623564666533316135623132663262383866353930626463353138
              3465346465333363620a343331303438313465636639643561653063336664633564343637353035
              62623834303638656163656466353937623131386430333364626265393830333736643866663230
              6435653836653161626362383063396364343138653762613134
          plugins.Octoslack.slack_webhook_config.webhook_url: "https://mattermost.{{ common_tld }}/hooks/{{ octopi_mattermost_hook }}"
          plugins.Octoslack.snapshot_upload_method: MINIO
          plugins.Octoslack.supported_events.PrintStarted.Enabled: false
          plugins.Octoslack.supported_events.PrintFailed.Enabled: false
          plugins.Octoslack.supported_events.PrintCancelling.Enabled: false
          plugins.Octoslack.supported_events.PrintCancelled.Enabled: false
          plugins.Octoslack.supported_events.PrintPaused.Enabled: false
          plugins.Octoslack.supported_events.PrintResumed.Enabled: false
          plugins.Octoslack.supported_events.Error.Enabled: true
          plugins.Octoslack.supported_events.PrintDone.Enabled: true
          plugins.Octoslack.supported_events.PrintDone.CaptureSnapshot: true

          plugins._disabled:
            - tracking
            - logging
            - virtual_printer

          plugins.announcements.enabled_channels:
            - _important
            - _releases

          plugins.tplinksmartplug.arrSmartplugs:
            - autoConnect: true
              autoConnectDelay: 10
              autoDisconnect: true
              autoDisconnectDelay: 0
              automaticShutdownEnabled: true
              btnColor: '#808080'
              countdownOffDelay: 1
              countdownOnDelay: '0'
              currentState: 'off'
              displayWarning: false
              emeter:
                get_realtime: {}
              event_on_disconnect: false
              event_on_error: false
              event_on_shutdown: false
              event_on_startup: false
              event_on_upload: false
              gcodeCmdOff: false
              gcodeCmdOn: false
              gcodeEnabled: false
              gcodeOffDelay: 0
              gcodeOnDelay: 0
              gcodeRunCmdOff: ''
              gcodeRunCmdOn: ''
              icon: icon-print
              ip: {{ networks.iot.subnet | ansible.utils.nthhost(32) }}/3
              label: Printer & Lights
              sysCmdOff: false
              sysCmdOffDelay: 0
              sysCmdOn: false
              sysCmdOnDelay: 0
              sysRunCmdOff: ''
              sysRunCmdOn: ''
              thermal_runaway: false
              useCountdownRules: true
              warnPrinting: true

          plugins.tplinksmartplug.idleTimeout: '15'
          plugins.tplinksmartplug.powerOffWhenIdle: true

          plugins.tracking.enabled: false

          server.onlineCheck.enabled: false
          server.pluginBlacklist.enabled: false

          temperature.profiles:
            - bed: 85
              extruder: 230
              name: PETG
            - bed: 60
              extruder: 210
              name: PLA

          webcam.timelapseEnabled: false
