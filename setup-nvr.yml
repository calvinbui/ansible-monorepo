---

- hosts: nvr

  vars:
    lego_directory: "/data/lego"
    lego_email: "nvr-lego{{ common_email_to }}"
    lego_domain: "nvr.{{ common_local_tld }}"
    cloudflare_api_token: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      35633131303132393436333732393436346562306131366264643366376135393566376137633538
      3033303630383661366331636435643735366531636366310a666432343166623939306163643437
      33386666353136656534333031373334376166353338303739373734373363646266646238646239
      3338656337393135660a393431636434373262303763323766303162356161343861393463626366
      30383662396536656563336330323264396430653434393639383835363162323238346132353232
      6235323131633136306261613864663163623061353462313765

  handlers:
    - name: Restart unifi-protect
      ansible.builtin.service:
        name: unifi-protect
        state: restarted

    - name: Restart unifi-core
      ansible.builtin.service:
        name: unifi-core
        state: restarted

  tasks:
    - name: Set authorized keys
      ansible.posix.authorized_key:
        user: root
        state: present
        key: https://github.com/calvinbui.keys
        comment: github keys

    - name: Create Lego directory
      ansible.builtin.file:
        path: "{{ lego_directory }}"
        state: directory
        mode: '0755'

    - name: Download Lego
      ansible.builtin.unarchive:
        src: "https://github.com/go-acme/lego/releases/download/v{{lego_version}}/lego_v{{lego_version}}_linux_arm64.tar.gz"
        dest: "{{ lego_directory }}"
        remote_src: true
      vars:
        lego_version: 4.27.0

    - name: Check for existing certificates
      ansible.builtin.command:
        cmd: ./lego list
        chdir: "{{ lego_directory }}"
      register: lego_list_output
      changed_when: false

    - name: Obtain a certificate
      ansible.builtin.command:
        argv:
          - "{{ lego_directory }}/lego"
          - "--email={{ lego_email }}"
          - "--path={{ lego_directory }}/.lego"
          - "--domains={{ lego_domain }}"
          - --key-type=rsa2048
          - --accept-tos
          - --dns=cloudflare
          - --dns.resolvers=1.1.1.1:53
          - --dns.resolvers=1.0.0.1:53
          - run
      environment:
        CF_DNS_API_TOKEN: "{{ cloudflare_api_token }}"
      changed_when: true
      when: "'No certificates found.' in lego_list_output.stdout"

    - name: Symlink certificate files
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        state: link
        force: true
      loop:
        -
          src: "{{ lego_directory }}/.lego/certificates/nvr.{{ common_local_tld }}.crt"
          dest: /data/unifi-core/config/unifi-core.crt
        -
          src: "{{ lego_directory }}/.lego/certificates/nvr.{{ common_local_tld }}.key"
          dest: /data/unifi-core/config/unifi-core.key
      notify:
        - Restart unifi-protect
        - Restart unifi-core

    - name: Copy renew script
      ansible.builtin.template:
        src: "files/nvr/lego-renew.sh.j2"
        dest: "{{ lego_directory }}/lego-renew.sh"
        owner: root
        group: root
        mode: "0755"

    - name: Create Lego renewal service
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Lego renewal

          [Service]
          Type=oneshot
          Environment=HOME=/root
          RemainAfterExit=false
          TimeoutSec=15m
          WorkingDirectory={{ lego_directory }}
          ExecStart={{ lego_directory }}/lego-renew.sh
        dest: /etc/systemd/system/lego-renewal.service
        owner: root
        group: root
        mode: "0755"

    - name: Create Lego renewal timer
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Run Lego renewal daily and at startup
          After=unifi-protect.service unifi-core.service

          [Timer]
          Persistent=true
          OnStartupSec=300
          OnCalendar=*-*-* 03:00:00
          RandomizedDelaySec=300

          [Install]
          WantedBy=timers.target
        dest: /etc/systemd/system/lego-renewal.timer
        owner: root
        group: root
        mode: "0755"

    - name: Enable Lego renewal timer
      ansible.builtin.systemd_service:
        name: lego-renewal.timer
        state: started
        enabled: true
        daemon_reload: true
