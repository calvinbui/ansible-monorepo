---
# https://torsion.org/borgmatic/
#
# Init the backup with:
# $ docker exec borgmatic sh -c "borgmatic --init --encryption repokey-blake2"
#
# Extract the encryption key with:
# $ borg key export /mnt/destination
#
# Start a backup with:
# $ borgmatic --stats
#
# Restore a backup with:
# $ borgmatic extract

- hosts: homelab

  become: true

  vars:
    borgmatic_directory: /borgmatic

    borgmatic_backups:
      - name: misc
        source: "{{ common_directory_misc }}"
        crontab: "0 2 * * *"
        repository: q09177h4@q09177h4.repo.borgbase.com:repo
        compression: lz4

      - name: work
        source: "{{ common_directory_storage }}/Work"
        crontab: "30 2 * * *"
        repository: lh782u97@lh782u97.repo.borgbase.com:repo
        compression: none

      - name: photos
        source: "{{ common_directory_photos }}"
        crontab: "30 3 * * *"
        repository: g0h7y7az@g0h7y7az.repo.borgbase.com:repo
        compression: none

      - name: apps
        source: "{{ common_directory }}"
        crontab: "0 3 * * *"
        repository: y8p6ha46@y8p6ha46.repo.borgbase.com:repo
        compression: lz4
        exclude_patterns:
          - '/mnt/source/languagetool'

          - '/mnt/source/nextcloud/nextcloud/app/data/*/cache'
          - '/mnt/source/nextcloud/nextcloud/build'

          - '/mnt/source/jellyfin'

          - '/mnt/source/unifi/data/backup'
          - '/mnt/source/unifi/data/db/diagnostic.data'

          - '/mnt/source/photoprism/photoprism/cache'

          - '/mnt/source/monitoring/prometheus/data'

          - '/mnt/source/nzbhydra/backup'

          - '/mnt/source/*/*/log'
          - '/mnt/source/*/*/log.*'
          - '/mnt/source/*/*/logs'
          - '/mnt/source/*/*/logs.*'
          - '/mnt/source/*/logs'
          - '/mnt/source/*/logs.*'
          - '/mnt/source/*/log'
          - '/mnt/source/*/log.*'
          - '/mnt/source/*/*.log'
          - '/mnt/source/*/*.log.*'

    borgmatic_pass: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      37626530363533323433633066656632393664313962366264363435386635346634613433303661
      3866616565383433353636356337356438373934373433650a653235663033383330386638303031
      63303930626431656232343336393965343966653330323964313532353964613030643137616363
      3966623038626139300a666265326566373439663038393432396432356636353733643361623031
      35663138313039623361346562346234636365316164636365663439326663643261643438376334
      3361306465303461613739396564306434333033643962616664
    borgmatic_notification_webhook: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      35316463616432373433336236326164616232316162646138373738656634353466653863613563
      3135313633663131386434363036363936653763366661370a343064653032623133303638656566
      38373633306665333363666331633339666634653737376530386263373539636262653839386238
      6264623635633564640a643531386632323565616138376261383563353861646634646433333534
      65363932316661303164623130656234323234323962323263636338303539643431363531343435
      37386565336366383061353634643261616163666361656466343036386137363062336236343933
      38386630306635626434366464386234343265333230303965303239323366386565336130306639
      65633139313433323530

    docker_network: "{{ networks.mgmt }}"

  pre_tasks:
    - name: Create Borgmatic directories
      ansible.builtin.file:
        path: "{{ borgmatic_directory }}"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_root_group }}"
        mode: "0771"

    - name: Clone Borgbackup repo
      ansible.builtin.git:
        repo: https://github.com/borgbackup/borg
        clone: true
        dest: "{{ borgmatic_directory }}/borgbackup"
        version: "1.1.16"

  tasks:
    - name: "Create borgmatic.d directory"
      ansible.builtin.file:
        path: "{{ borgmatic_directory }}/{{ item.name }}/borgmatic.d"
        state: directory
        mode: "0744"
      loop: "{{ borgmatic_backups }}"

    - name: "Create config directory"
      ansible.builtin.file:
        path: "{{ borgmatic_directory }}/{{ item.name }}/config"
        state: directory
        mode: "0744"
      loop: "{{ borgmatic_backups }}"

    - name: "Create ssh directory"
      ansible.builtin.file:
        path: "{{ borgmatic_directory }}/{{ item.name }}/ssh"
        state: directory
        mode: "0744"
      loop: "{{ borgmatic_backups }}"

    - name: "Create cache directory"
      ansible.builtin.file:
        path: "{{ borgmatic_directory }}/{{ item.name }}/cache"
        state: directory
        mode: "0744"
      loop: "{{ borgmatic_backups }}"

    - name: "Template configuration"
      ansible.builtin.template:
        src: "borgmatic/config.yaml.j2"
        dest: "{{ borgmatic_directory }}/{{ item.name }}/borgmatic.d/config.yaml"
        owner: root
        group: root
        mode: "0744"
      loop: "{{ borgmatic_backups }}"

    - name: "Template crontab"
      ansible.builtin.copy:
        content: "{{ item.crontab }} PATH=$PATH:/usr/bin /usr/bin/borgmatic --stats --files --progress -v 0 2>&1"
        dest: "{{ borgmatic_directory }}/{{ item.name }}/borgmatic.d/crontab.txt"
        owner: root
        group: root
        mode: "0744"
      loop: "{{ borgmatic_backups }}"

    - name: Copy SSH keys
      ansible.builtin.copy:
        src: files/borgmatic/ssh/
        dest: "{{ borgmatic_directory }}/{{ item.name }}/ssh/"
        owner: root
        group: root
        mode: '0600'
      loop: "{{ borgmatic_backups }}"

    - name: Template notification script
      ansible.builtin.template:
        src: borgmatic/notifications.sh.j2
        dest: "{{ borgmatic_directory }}/{{ item.name }}/borgmatic.d/notifications.sh"
        mode: '0500'
      loop: "{{ borgmatic_backups }}"

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        name: "borgmatic-{{ item.name }}"
        image: b3vis/borgmatic
        volumes:
          # data to backup. dont mount as ro when a restore is needed
          - "{{ item.source }}:/mnt/source:ro"

          - "{{ borgmatic_directory }}/borgbackup:/mnt/borg-repository"

          - "{{ borgmatic_directory }}/{{ item.name }}/borgmatic.d/:/etc/borgmatic.d/"
          - "{{ borgmatic_directory }}/{{ item.name }}/borgmatic:/root/.borgmatic"
          - "{{ borgmatic_directory }}/{{ item.name }}/config/borg:/root/.config/borg"
          - "{{ borgmatic_directory }}/{{ item.name }}/ssh:/root/.ssh"
          - "{{ borgmatic_directory }}/{{ item.name }}/cache/borg:/root/.cache/borg"
        env:
          TZ: "{{ common_timezone }}"
          BORG_PASSPHRASE: "{{ borgmatic_pass }}"
        comparisons:
          env: strict
      loop: "{{ borgmatic_backups }}"
