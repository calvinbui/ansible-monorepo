{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",

  dependencyDashboard: true,

  ansible: {
    fileMatch: ["^.*\\.ya?ml$"],
  },

  timezone: "Australia/Sydney",

  schedule: [
    "after 5pm and before 11:59pm every weekday",
    "after 9am and before 11:59pm every weekend",
  ],

  reviewers: ["calvinbui"],

  commitMessagePrefix: "{{depName}}:",
  commitMessageAction: "update",
  commitMessageTopic: "version",
  commitMessageExtra: "to {{#if isMajor}}{{{prettyNewMajor}}}{{else}}{{{prettyNewVersion}}}{{/if}}",

  /*
    Renovate will evaluate all packageRules and not stop once it gets a first match
    You should order your packageRules in order of importance so that later rules can override settings from earlier rules if needed.
  */
  packageRules: [
    /* Ignore latest and localhost tags */
    {
      matchDatasources: ["docker"],
      matchCurrentVersion: "/localhost|latest/",
      enabled: false,
    },
    /*
      override Docker datasource defaults
      https://docs.renovatebot.com/modules/datasource/#docker-datasource
    */
    {
      matchDatasources: ["docker"],
      commitMessageTopic: "version",
      digest: {
        commitMessageTopic: "digest",
        group: {
          commitMessageTopic: "digest",
        },
      },
      pin: {
        group: {
          commitMessageTopic: "version",
        },
      },
      group: {
        commitMessageTopic: "version",
      },
    },
    /* Plex */
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["plexinc/pms-docker"],
      versioning: "loose",
    },
    /* Umami */
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["ghcr.io/mikecao/umami"],
      versioning: "regex:^postgresql-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
    },
    /* Borgmatic */
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["b3vis/borgmatic"],
      versioning: "regex:^base-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
    },
    /* Minio */
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["minio/minio", "minio/mc"],
      versioning: "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T(?<build>.*)Z$",
      automerge: true,
      ignoreTests: true,
    },
    /* NZBGet */
    // automerge patch version which linuxserver.io puts as the date of the build
    {
      matchDatasources: ["docker"],
      matchPackagePatterns: [".*\\/nzbget$"],
      matchUpdateTypes: ["patch"],
      automerge: true,
      ignoreTests: true,
    },
    /* NZBHydra 2 */
    {
      matchDatasources: ["docker"],
      matchPackagePatterns: [".*\\/nzbhydra2$"],
      customChangelogUrl: "https://github.com/theotherp/nzbhydra2",
    },
    /* Jackett */
    {
      matchDatasources: ["docker"],
      matchPackagePatterns: [".*\\/jackett$"],
      customChangelogUrl: "https://github.com/Jackett/Jackett",
    },
    /* Bazarr */
    {
      matchDatasources: ["docker"],
      matchPackagePatterns: [".*\\/bazarr"],
      customChangelogUrl: "https://github.com/morpheus65535/bazarr",
    },
    /* VictoriaMetrics */
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["victoriametrics/victoria-metrics"],
      customChangelogUrl: "https://github.com/VictoriaMetrics/VictoriaMetrics",
    },
    /* vmalert */
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["victoriametrics/vmalert"],
      customChangelogUrl: "https://github.com/VictoriaMetrics/VictoriaMetrics",
    },
    /* Homer */
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["b4bz/homer"],
      customChangelogUrl: "https://github.com/bastienwirtz/homer",
    },
    /* Renovate */
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["renovate/renovate"],
      customChangelogUrl: "https://github.com/renovatebot/renovate",
    },
    /* Authelia */
    {
      matchDatasources: ["docker"],
      matchPackageNames: [".*\\/authelia"],
      customChangelogUrl: "https://github.com/authelia/authelia",
    },
  ],

  prBodyTemplate: "{{{table}}}{{{notes}}}{{{changelogs}}}{{{controls}}}",
}
