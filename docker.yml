---

- hosts: homelab

  handlers:
    - name: Restart
      ansible.builtin.service:
        name: docker
        state: restarted
    - name: Update grub
      ansible.builtin.command: update-grub

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 600
      changed_when: false

    # Based on https://docs.docker.com/engine/installation/linux/ubuntu/
    - name: Uninstall old versions
      ansible.builtin.apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
      register: result
      until: result is success
      retries: 5
      delay: 5

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        keyring: /usr/share/keyrings/docker-archive-keyring.gpg
      register: result
      until: result is success
      retries: 5
      delay: 5

    - name: Add Docker Repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: true

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      register: result
      until: result is success
      retries: 5
      delay: 5

    - name: Install docker-compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: 0755

    - name: Start Docker
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Add user to Docker group
      ansible.builtin.user:
        name: "{{ common_user }}"
        groups: docker
        append: true

    - name: Install docker pip package
      ansible.builtin.pip:
        name: docker
        executable: pip3

    - name: Create Docker networks
      community.docker.docker_network:
        name: "{{ item.value.name }}"
        driver: "{{ item.value.driver }}"
        ipam_config:
          - gateway: "{{ item.value.gateway }}"
            subnet: "{{ item.value.gateway + item.value.subnet }}"
            iprange: "{{ item.value.iprange }}"
        driver_options:
          parent: "{{ item.value.parent }}.{{ item.value.vlan }}"
      loop: "{{ networks | dict2items }}"
      notify: Restart

    - name: Enable swap limit support
      ansible.builtin.lineinfile:
        dest: /etc/default/grub
        state: present
        regex: '^GRUB_CMDLINE_LINUX='
        line: 'GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"'
      notify: Update grub

    # https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file
    - name: Configure daemon
      ansible.builtin.copy:
        content: |
          {
            "dns": ["192.168.1.1"]
          }
        dest: "/etc/docker/daemon.json"
        owner: "root"
        group: "root"
        mode: "0755"
      notify: Restart
