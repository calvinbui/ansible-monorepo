---

- hosts: homelab

  vars:
    application: dex

    docker_network: "{{ networks.pub }}"

  handlers:
    - name: Restart
      ansible.builtin.command: docker restart "{{ application }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0771"

    - name: Create postgres container
      ansible.builtin.import_role:
        name: postgres
      vars:
        postgres_version: 14
        postgres_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          33646632396130386533616463613266303030636635303861326135666536636462333264613564
          6563373133626137333633666464666461646265393939310a653262353231396636386231313035
          64633838646137363932393238316462306437393338383866653134336130393064343535633338
          3135653532356636620a396162313731396138336631346563363432663864383832333532336364
          63343065363032623763306631396261373037623134313635333763663165616162663932323136
          3736666633383065306630326664646563663731393930623434

    - name: Create config file
      ansible.builtin.copy:
        dest: "{{ config_directory }}/config.yaml"
        mode: "755"
        content: |
          ---

          issuer: https://{{ application }}.{{ common_tld }}

          storage:
            type: postgres
            config:
              host: {{ _postgres_hostname }}
              port: {{ _postgres_port }}
              database: {{ _postgres_database }}
              user: {{ _postgres_username }}
              password: {{ _postgres_password }}
              ssl:
                mode: disable

          web:
            http: 0.0.0.0:5556

          connectors:
            - type: ldap
              name: OpenLDAP
              id: ldap
              config:
                host: {{ ldap_host }}:389
                insecureNoSSL: true

                bindDN: {{ ldap_admin_dn }}
                bindPW: {{ ldap_admin_password }}

                userSearch:
                  baseDN: ou={{ ldap_user_ou }},{{ ldap_base_dn }}
                  filter: "(objectClass=person)"
                  username: {{ ldap_account_attribute }}
                  idAttr: DN
                  emailAttr: mail
                  nameAttr: cn

                groupSearch:
                  baseDN: ou={{ ldap_group_ou }},{{ ldap_base_dn }}
                  filter: "(objectClass=groupOfUniqueNames)"
                  userMatchers:
                    - userAttr: DN
                      groupAttr: member
                  nameAttr: cn

          staticClients:
            - id: outline
              name: Outline
              secret: {{ ldap_oidc_secrets.outline }}
              redirectURIs:
                - https://outline.{{ common_tld }}/auth/oidc.callback
      notify: Restart

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: ghcr.io/dexidp/dex:v2.33.0
        command:
          - dex
          - serve
          - --web-http-addr
          - 0.0.0.0:5556
          - /etc/dex/config.yaml
        volumes:
          - "{{ config_directory }}/config.yaml:/etc/dex/config.yaml"
        traefik:
          - port: 5556
