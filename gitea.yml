---

- hosts: homelab

  vars:
    application: gitea

    gitea_oidc_secret: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      34306261383234663866353066613363613230646336616661383864613735373662376262336139
      6137303437393862373538623631646366666438373035390a346133616365353133356537363132
      66666134393532313537373862383365353064316234383666326363363734666334623766633563
      3766353739366233380a393839303039343630393835353737313037393731343031636530396535
      32393063313265653262336563393635386563626563373265613038353332393637336664356164
      66336535613937646338393631633963343335623131363066336662643365646562393538663661
      61333236306631306635623865336338303533313065363535613439376164323961323334343635
      30613833333331346335316434313165656134613236653765323030616633626265643336663165
      37326464386532383265626636616531396634656230356533666164636262623162653563613331
      33346332373532643364343661643366663333376564303831626538653965373335393266613665
      363831343433333865646236363338663431

    docker_network: "{{ networks.pub }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0771"
      loop:
        - "{{ config_directory }}"
        - /var/log/gitea

    - name: Create postgres container
      ansible.builtin.include_role:
        name: postgres
      vars:
        postgres_version: 16
        postgres_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          61343333353734383736653837366562643461333136616136343137343762336361613038343662
          3938343633353465303438356335376331663765376435320a343835386261636163356166343361
          62656439656431393136616533626265363738313864626464643334373663653166393137396638
          3763626466613631310a656366336136653036393139626133613264643938353333663264373665
          63383862376364343634656635666261393062363136333239656634663132316233656537343265
          3232646432666434363733383764653137633363313234316263

        # https://docs.gitea.io/en-us/database-prep/
        postgres_initdb_args: '-E "UTF8"'
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
        postgres_host_auth_method: scram-sha-256

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: gitea/gitea:1.21.7
        volumes:
          - "{{ config_directory }}/data:/data"
          - /etc/timezone:/etc/timezone:ro
          - /etc/localtime:/etc/localtime:ro
        env:
          USER_UID: "{{ common_user_id | string }}"
          USER_GID: "{{ common_group_id | string }}"

          # https://docs.gitea.com/next/administration/config-cheat-sheet
          GITEA__server__DOMAIN: "{{ application }}.{{ common_tld }}"
          GITEA__server__ROOT_URL: "https://{{ application }}.{{ common_tld }}"
          GITEA__server__OFFLINE_MODE: "true"
          GITEA__server__DISABLE_SSH: "true"
          GITEA__server__LFS_START_SERVER: "false"
          GITEA__server__MINIMUM_KEY_SIZE_CHECK: "true"
          GITEA__server__LANDING_PAGE: "/user/login"

          GITEA__repository__DEFAULT_BRANCH: "master"
          GITEA__repository__FORCE_PRIVATE: "true"
          GITEA__repository__DEFAULT_PRIVATE: "true"
          GITEA__repository__DISABLED_REPO_UNITS: "repo.ext_issues,repo.wiki,repo.ext_wiki,repo.projects,repo.packages"
          GITEA__repository__DEFAULT_REPO_UNITS: "repo.code,repo.pulls,repo.actions"
          GITEA__repository__DISABLE_STARS: "true"

          GITEA__database__DB_TYPE: postgres
          GITEA__database__HOST: "{{ _postgres_hostname }}:{{ _postgres_port | string }}"
          GITEA__database__NAME: "{{ _postgres_database }}"
          GITEA__database__USER: "{{ _postgres_username }}"
          GITEA__database__PASSWD: "{{ _postgres_password }}"

          GITEA__security__INSTALL_LOCK: "true"
          GITEA__security__LOGIN_REMEMBER_DAYS: "180"
          GITEA__security__DISABLE_QUERY_AUTH_TOKEN: "true"

          GITEA__mailer__ENABLED: "true"
          GITEA__mailer__PROTOCOL: "smtp+starttls"
          GITEA__mailer__SMTP_ADDR: "{{ common_email_server }}"
          GITEA__mailer__SMTP_PORT: "{{ common_email_port | string }}"
          GITEA__mailer__USER: "{{ common_email_username }}"
          GITEA__mailer__PASSWD: "{{ common_email_password }}"
          GITEA__mailer__FROM: "{{ application }}{{ common_email_to }}"

          GITEA__openid__ENABLE_OPENID_SIGNIN: "false"
          GITEA__openid__ENABLE_OPENID_SIGNUP: "true"
          GITEA__openid__WHITELISTED_URIS: "authentik.{{ common_tld }}"
          GITEA__service__DISABLE_REGISTRATION: "true"
          GITEA__service__ALLOW_ONLY_EXTERNAL_REGISTRATION: "true"
          GITEA__service__SHOW_REGISTRATION_BUTTON: "false"
          GITEA__oauth2_client__ENABLE_AUTO_REGISTRATION: "true"
          GITEA__oauth2_client__OPENID_CONNECT_SCOPES: "email profile"

          GITEA__service__ACTIVE_CODE_LIVE_MINUTES: "5"
          GITEA__service__RESET_PASSWD_CODE_LIVE_MINUTES: "5"
          GITEA__service__REQUIRE_SIGNIN_VIEW: "true"
          GITEA__service__ENABLE_NOTIFY_MAIL: "true"
          GITEA__service__DEFAULT_KEEP_EMAIL_PRIVATE: "true"
          GITEA__service__DEFAULT_ALLOW_CREATE_ORGANIZATION: "false"
          GITEA__service__ENABLE_USER_HEATMAP: "false"
          GITEA__service__ENABLE_TIMETRACKING: "false"
          GITEA__service__DEFAULT_ENABLE_TIMETRACKING: "false"
          GITEA__service__AUTO_WATCH_NEW_REPOS: "false"
          GITEA__service__AUTO_WATCH_ON_CHANGES: "false"
          GITEA__service__DEFAULT_USER_VISIBILITY: "private"
          GITEA__service__ALLOWED_USER_VISIBILITY_MODES: "private"
          GITEA__service__DEFAULT_ORG_VISIBILITY: "private"
          GITEA__service__SHOW_MILESTONES_DASHBOARD_PAGE: "false"

          GITEA__service.explore__REQUIRE_SIGNIN_VIEW: "true"
          GITEA__service.explore__DISABLE_USERS_PAGE: "true"

          GITEA__picture__DISABLE_GRAVATAR: "true"
          GITEA__picture__ENABLE_FEDERATED_AVATAR: "false"

          GITEA__log__MODE: "console,file"
          GITEA__log__logger.access.MODE: ""
          GITEA__log__logger.router.MODE: ""
          GITEA__log__logger.xorm.MODE: ""
          GITEA__log__MAX_DAYS: "2"

          GITEA__api__ENABLE_SWAGGER: "false"

          GITEA__oauth2__ENABLE: "true"

          GITEA__packages__ENABLED: "false"

          GITEA__actions__ENABLED: "true"

          GITEA__other__SHOW_FOOTER_VERSION: "false"
          GITEA__other__SHOW_FOOTER_TEMPLATE_LOAD_TIME: "false"
          GITEA__other__ENABLE_SITEMAP: "false"
          GITEA__other__ENABLE_FEED: "false"
        traefik:
          - port: 3000
        homepage:
          group: Programming
          weight: 100
          description: "Git service"
        blackbox:
          path: /api/healthz

    - name: Add authentik source
      community.docker.docker_container_exec:
        container: "{{ application }}"
        user: 1000
        command: >-
          gitea admin auth add-oauth
            --name authentik
            --provider openidConnect
            --key {{ application }}
            --secret {{ gitea_oidc_secret }}
            --auto-discover-url https://authentik.{{ common_tld }}/application/o/{{ application }}/.well-known/openid-configuration
      register: _command_result
      failed_when:
        - ('Command error' in _command_result.stderr)
        - ('login source already exists' not in _command_result.stderr)
      changed_when: ('login source already exists' not in _command_result.stderr)

    - name: Get authentik source ID
      community.docker.docker_container_exec:
        container: "{{ application }}"
        user: 1000
        command: gitea admin auth list
      register: _gitea_auth_sources
      failed_when: ('Command error' in _gitea_auth_sources.stderr)
      changed_when: false

    - name: Set source id
      ansible.builtin.set_fact:
        _gitea_auth_id: "{{ _gitea_auth_sources.stdout_lines[1] | split('\t') | first }}"

    - name: Update authentik source
      community.docker.docker_container_exec:
        container: "{{ application }}"
        user: 1000
        command: >-
          gitea admin auth update-oauth
            --id {{ _gitea_auth_id }}
            --name authentik
            --provider openidConnect
            --key {{ application }}
            --secret {{ gitea_oidc_secret }}
            --icon-url https://authentik.{{ common_tld }}/static/dist/assets/icons/icon.svg
            --auto-discover-url https://authentik.{{ common_tld }}/application/o/{{ application }}/.well-known/openid-configuration
            --scopes email
            --scopes profile
      register: _command_result
      failed_when: ('Command error' in _command_result.stderr)
      changed_when: true # nothing is returned so we'll always assume changed
