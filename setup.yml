---
- hosts: homelab
  become: true
  pre_tasks:
    - name: Update apt cache
      apt:
        update_cache: true
        cache_valid_time: 600
      changed_when: false
      when: ansible_distribution == 'Ubuntu'
  vars:
    apt_install_packages:
      - name:
          - neovim
          - htop
          - iftop
          - nano
          - tree
          - unzip
          - ncdu
          - curl
          - wget
          - dnsutils
          - git
          - zfsutils-linux
        state: present
      - name:
          - popularity-contest
          - pastebinit
        state: absent
    authorized_keys_config:
      - user: root
        state: present
        key: https://github.com/calvinbui.keys
      - user: "{{ common_user }}"
        state: present
        key: https://github.com/calvinbui.keys
    docker_users:
      - "{{ common_user }}"
    pip_install_packages:
      - name: docker
        executable: pip3
  handlers:
    - name: Restart Docker
      service:
        name: docker
        state: restarted
  roles:
    - role: motd
      when: ansible_distribution == 'Ubuntu'
    - authorized-keys
    - role: apt
      when: ansible_os_family == 'Debian'
    - role: yum
      when: ansible_os_family == 'RedHat'
    - pip
    - docker
    # - nfs-client
  tasks:
    - lineinfile:
        path: /etc/sudoers
        state: present
        regexp: "^{{ common_user }}"
        line: "{{ common_user }} ALL=(ALL) NOPASSWD: ALL"
        validate: 'visudo -cf %s'
    - name: Create Docker networks
      docker_network:
        name: "{{ item.value.name }}"
        driver: "{{ item.value.driver }}"
        ipam_config:
          - gateway: "{{ item.value.gateway }}"
            subnet: "{{ item.value.gateway + item.value.subnet }}"
            iprange: "{{ item.value.iprange }}"
        driver_options:
          parent: "{{ item.value.parent }}.{{ item.value.vlan }}"
      loop: "{{ networks|dict2items }}"
    - name: Set timezone
      timezone:
        name: "{{ common_timezone }}"
    - name: Create common directory
      file:
        path: "{{ common_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
