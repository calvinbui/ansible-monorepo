---
- hosts: homelab
  become: true
  vars:
    network: "{{ networks.pub }}"
    matomo_name: matomo
    matomo_app_directory: "{{ common_directory }}/matomo/matomo"
    matomo_app_key: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      66616238363337613032646334663866356262393833386262303533373538393136326463363334
      6438663263653132323766616165393437336635346234350a383461376366363864333564653436
      30346466613538373461623564366338393435376332303332303334363532616230343537636162
      6637366635373636380a613762646634323364316438663163656138303130653834303861373764
      62353837376239333661346665623538383638303766303433396636633534383065643735663330
      6135626462316437356132386534306462616434356438396534
    matomo_nginx_config: "{{ common_directory }}/matomo/nginx.conf"
    mariadb_name: "{{ matomo_name }}-mariadb"
    mariadb_version: '10'
    mariadb_directory: "{{ common_directory }}/matomo/mariadb"
    mariadb_command:
      - --max_allowed_packet=64MB
    mariadb_environment_variables:
      MYSQL_ROOT_PASSWORD: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        39306564663539383564383639366162373466353735623535313734663634636439306135386132
        6139343561613830633630623066323539646333663130320a326432326263366262653537313039
        35306531626365353462376434626431656362333162303062346166323234643261613731383765
        3732306234343964390a356333383336623461666463643764353438613765653530376336633763
        64333930653766326333613066333737343833353936643134626435653863343836633038356231
        3965343533313930383538623962653565633936396631326136
      MYSQL_DATABASE: matomo
  module_defaults:
    docker_container:
      keep_volumes: false
      state: started
      restart_policy: unless-stopped
      networks_cli_compatible: true
      purge_networks: true
      dns_servers: "{{ network.dns }}"
      networks:
        - name: "{{ network.name }}"
      comparisons:
        env: strict
        labels: allow_more_present
  handlers:
    - name: Restart NGINX
      shell: docker restart "{{ matomo_name }}-nginx"
  pre_tasks:
    - name: Create Matomo directories
      file:
        path: "{{ matomo_app_directory }}"
        state: directory
        recurse: true
        owner: "82" # www-data
        group: "{{ common_root_group }}"
      loop:
  roles:
    - mariadb
  tasks:
    - name: Create Matomo container
      docker_container:
        name: "{{ matomo_name }}"
        hostname: "{{ matomo_name }}"
        image: matomo:3-fpm-alpine
        volumes:
          - "{{ matomo_app_directory }}:/var/www/html"
        env:
          MATOMO_DATABASE_ADAPTER: mysql
          MATOMO_DATABASE_HOST: "{{ mariadb_name }}"
          MATOMO_DATABASE_USERNAME: root
          MATOMO_DATABASE_PASSWORD: "{{ mariadb_environment_variables.MYSQL_ROOT_PASSWORD }}"
          MATOMO_DATABASE_DBNAME: "{{ mariadb_environment_variables.MYSQL_DATABASE }}"
        labels:
          traefik.enable: "false"

    - name: Template NGINX config
      template:
        src: templates/matomo/nginx.conf.j2
        dest: "{{ matomo_nginx_config }}"
        owner: "{{ common_user }}"
        group: "{{ common_root_group }}"
      notify: Restart NGINX

    - name: Create Matomo NGINX container
      docker_container:
        name: "{{ matomo_name }}-nginx"
        hostname: "{{ matomo_name }}-nginx"
        image: nginx:alpine
        volumes:
          - "{{ matomo_app_directory }}:/var/www/html:ro"
          - "{{ matomo_nginx_config }}:/etc/nginx/conf.d/default.conf:ro"
        labels:
          traefik.http.routers.matomo.entrypoints: "web"
          traefik.http.routers.matomo.middlewares: "redirect@file"
          traefik.http.routers.matomo.rule: "Host(`{{ matomo_name }}.{{ common_tld }}`)"

          traefik.http.routers.matomo-secure.entrypoints: "web-secure"
          traefik.http.routers.matomo-secure.tls: "true"
          traefik.http.routers.matomo-secure.tls.certresolver: letsencrypt
          traefik.http.routers.matomo-secure.rule: "Host(`{{ matomo_name }}.{{ common_tld }}`)"

          traefik.http.services.matomo.loadbalancer.server.port: "80"
