---

- hosts: homelab

  vars:
    application: "languagetool"

    docker_network: "{{ networks.pub }}"

  handlers:
    - name: Restart
      community.docker.docker_container:
        name: "{{ application }}"
        restart: true
        comparisons:
          '*': ignore

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0771"

    - name: Create ngrams folder
      ansible.builtin.file:
        path: "{{ config_directory }}/ngrams"
        state: directory
        owner: "{{ common_user_id }}"
        group: 101
        mode: "0771"

    - name: Download ngrams
      ansible.builtin.get_url:
        url: "https://languagetool.org/download/ngram-data/ngrams-{{ item.lang }}-{{ item.version }}.zip"
        dest: "{{ config_directory }}/ngrams-{{ item.lang }}-{{ item.version }}.zip"
        owner: "{{ common_root_id }}"
        group: "{{ common_root_group }}"
        mode: "0644"
        checksum: "{{ item.checksum }}"
      loop:
        - lang: en
          version: "20150817"
          checksum: md5:ee56b280af45daf8e68fe0d69dd0914d
      register: _ngrams

    - name: Unarchive ngrams
      ansible.builtin.unarchive:
        src: "{{ item.dest }}.zip"
        dest: "{{ config_directory }}/ngrams/"
        creates: "{{ config_directory }}/ngrams/{{ item.item.lang }}"
        remote_src: true
      loop: "{{ _ngrams.results }}"

    - name: Download ngram-lang-detect
      ansible.builtin.get_url:
        url: "https://languagetool.org/download/ngram-lang-detect/model_ml50_new.zip"
        dest: "{{ config_directory }}/ngram-lang-detect.zip"
        owner: "{{ common_root_id }}"
        group: "{{ common_root_group }}"
        mode: "0644"

    - name: Create word2vec folder
      ansible.builtin.file:
        path: "{{ config_directory }}/word2vec"
        state: directory
        owner: "{{ common_user_id }}"
        group: 101
        mode: "0771"

    - name: Download word2vec model
      ansible.builtin.get_url:
        url: https://languagetool.org/download/word2vec/en.zip
        dest: "{{ config_directory }}/word2vec.tar.gz"
        owner: "{{ common_root_id }}"
        group: "{{ common_root_group }}"
        mode: "0644"

    - name: Unarchive word2vec
      ansible.builtin.unarchive:
        src: "{{ config_directory }}/word2vec.tar.gz"
        dest: "{{ config_directory }}/word2vec/"
        creates: "{{ config_directory }}/word2vec/en"
        remote_src: true

    - name: Create FastText folder
      ansible.builtin.file:
        path: "{{ config_directory }}/fasttext"
        state: directory
        owner: "{{ common_user_id }}"
        group: 101
        mode: "0771"

    - name: Download FastText model
      ansible.builtin.get_url:
        url: https://dl.fbaipublicfiles.com/fasttext/supervised-models/lid.176.bin
        dest: "{{ config_directory }}/fasttext/lid.176.bin"
        checksum: md5:01810bc59c6a3d2b79c79e6336612f65
        mode: "0775"
        owner: "{{ common_user_id }}"
        group: 101
      register: __download_fasttext

    - name: Clone FastText binary repo
      ansible.builtin.git:
        repo: https://github.com/facebookresearch/fastText.git
        dest: "{{ config_directory }}/fasttext/fasttext.git"
        version: v0.9.2
        update: false
      become_user: "{{ common_user }}"
      become: false
      register: __clone_fasttext

    - name: Set FastText binary repo permissions
      ansible.builtin.file:
        path: "{{ config_directory }}/fasttext/fasttext.git"
        state: directory
        recurse: true
        mode: "0775"
        owner: "{{ common_user_id }}"
        group: 101

    - name: Create script to compile FastText
      ansible.builtin.copy:
        dest: "{{ config_directory }}/fasttext/build.sh"
        mode: "755"
        content: |
          #!/bin/sh

          apk add \
            build-base \
            wget \
            git \
            unzip \

          cd /fasttext/fasttext.git

          make

    - name: Compile FastText in alpine
      ansible.builtin.command: "docker run --rm -v {{ config_directory }}/fasttext:/fasttext alpine:3.15.0 /fasttext/build.sh"
      when: __clone_fasttext.changed or __download_fasttext.changed

    - name: Set FastText permissions
      ansible.builtin.file:
        path: "{{ config_directory }}/fasttext/fasttext.git/fasttext"
        mode: "0775"
        owner: "{{ common_user_id }}"
        group: 101

    - name: Generate config file
      ansible.builtin.copy:
        dest: "{{ config_directory }}/config.properties"
        mode: "775"
        owner: "{{ common_user_id }}"
        group: 101
        content: |
          languageModel=/ngrams
          ngramLangIdentData=/ngram-lang-detect.zip
          word2vecModel=/word2vec
          fasttextModel=/fasttext/lid.176.bin
          fasttextBinary=/fasttext/fasttext.git/fasttext
          premiumAlways=true
      notify: Restart

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: silviof/docker-languagetool:5.8
        cap_drop:
          - all
        env:
          EXTRAOPTIONS: "-Xmx2g -Xms1g --premiumAlways"
        volumes:
          - "{{ config_directory }}/ngrams/:/ngrams"
          - "{{ config_directory }}/config.properties:/LanguageTool/config.properties"
          - "{{ config_directory }}/fasttext:/fasttext"
          - "{{ config_directory }}/word2vec:/word2vec"
          - "{{ config_directory }}/ngram-lang-detect.zip:/ngram-lang-detect.zip"
        traefik:
          - port: 8010
        blackbox:
          path: /v2/languages
