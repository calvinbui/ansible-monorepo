---

- hosts: homelab

  vars:
    application: drone

    drone_rpc_secret: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      34306631313438636131316533633863643933633736353939316131333937613537613931343734
      3163633963666235343435663035653464663630613430660a306236323634636138653630653637
      62336431323933333164616631636437343666613963653563303439393430376137613838633166
      3766316135386264350a633064303534386231653266303066656431656661396365323463656238
      39643636303930363363303466396339643736393861393538376237323339343035633732613732
      6131623939663130316337613264383863326535303534303839

    docker_network: "{{ networks.user }}"

  handlers:
    - name: Restart
      ansible.builtin.command: docker restart "{{ application }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0771"

    - name: Create server container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        name: "{{ application }}-server"
        image: drone/drone:2.12.1
        volumes:
          - "{{ config_directory }}/data:/data"
        env:
          DRONE_GITEA_CLIENT_ID: 806dcf4c-5128-46a1-a6d9-74dc77aa573b
          DRONE_GITEA_CLIENT_SECRET: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            31393863303731353536376330623865373739313930316331316461653636623366613662383730
            3332626663343137333165646161366165343864303131370a336237613264363062653433643738
            30316431643332366366386237336431323338643261373963363463623863363964306262366130
            6130356661313135610a306264313163383631626233386232646339643661376335393039346364
            63656563643532393534386166383662653066363530333765376462303334346362613362326633
            63393131383864386465613432636465353733383538306138613863346464383432666439316332
            396264393431663830643438626664623735
          DRONE_GITEA_SERVER: "https://gitea.{{ common_tld }}"
          DRONE_GIT_ALWAYS_AUTH: "true"

          DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"

          DRONE_SERVER_HOST: "{{ application }}.{{ common_tld }}"
          DRONE_SERVER_PROTO: "https"

          DRONE_USER_FILTER: calvinbui
          DRONE_USER_CREATE: username:calvinbui,admin:true

          # set to false on first run
          DRONE_REGISTRATION_CLOSED: "true"
        traefik:
          - port: 80
            rule: Host(`{{ application }}.{{ common_tld }}`)
        homer:
          name: Drone
          service: Collaboration
          priority: 99
          subtitle: "CI"
        blackbox:
          path: /healthz

    - name: Create runner container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        name: "{{ application }}-runner"
        image: drone/drone-runner-docker:1.8.2
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        env:
          DRONE_RPC_PROTO: "http"
          DRONE_RPC_HOST: "{{ application }}-server.{{ docker_network.name }}"
          DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"

          DRONE_RUNNER_CAPACITY: "2"
          DRONE_RUNNER_NAME: "runner-01"

          DRONE_UI_USERNAME: "{{ htpasswd.username }}"
          DRONE_UI_PASSWORD: "{{ htpasswd.password }}"

          DRONE_RUNNER_NETWORKS: "{{ docker_network.name }}"
        traefik:
          - port: 3000
            rule: Host(`{{ application }}-runner.{{ common_tld }}`)
        homer:
          name: Drone Runner
          service: Collaboration
          priority: 98
          subtitle: "CI"
        blackbox:
          path: /healthz

    - name: Copy Dockerfiles
      ansible.builtin.copy:
        src: "{{ files_directory }}/Dockerfiles"
        dest: "{{ config_directory }}/"
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0751"
      register: _drone_dockerfiles_copy

    - name: Locate all Dockerfile folders
      ansible.builtin.find:
        paths: "{{ config_directory }}/Dockerfiles"
        recurse: false
        file_type: directory
      register: _drone_dockerfiles_location

    - name: Build local Docker images
      community.docker.docker_image:
        build:
          path: "{{ item.path }}"
        name: "calvinbui/{{ item.path.split('/')[-1] }}:localhost"
        tag: latest
        push: false
        source: build
        state: present
        force_source: "{{ true if _drone_dockerfiles_copy.changed else false }}"
      loop: "{{ _drone_dockerfiles_location.files }}"

    - name: Pull and retag images
      block:
        - name: Pull images
          community.docker.docker_image:
            name: "{{ item }}"
            source: pull
          loop: "{{ _drone_retag_images }}"

        - name: Retag image
          community.docker.docker_image:
            name: "{{ item }}"
            repository: "calvinbui/{{ item.split('/')[-1].split(':')[0] }}:localhost"
            push: false
            source: local
          loop: "{{ _drone_retag_images }}"
      vars:
        _drone_retag_images:
          - kenshaw/drone-mattermost:latest
