---

- hosts: homelab

  vars:
    application: home-assistant

    home_assistant_dir: "{{ config_directory }}/addons"

    home_assistant_google_secure_devices_pin: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      32323164346637373262363162386333636531326133336139633236626138356136333835343965
      3438613663613164333634363137303030653662646462640a373163353661333732616665313761
      32303535316530656232363833613662386630653435303731366464346563326630313035356533
      3134336332663365390a633966653764313164306336316663326635313930306238646363303538
      6630

    docker_network: "{{ networks.iot }}"

  handlers:
    - name: Restart
      ansible.builtin.command: docker restart "{{ application }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_root_id }}"
        group: "{{ common_root_group }}"
        mode: "0771"

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: ghcr.io/home-assistant/home-assistant:2022.8.7
        env:
          TZ: "{{ common_timezone }}"
        volumes:
          - "{{ config_directory }}:/config"
          - /etc/localtime:/etc/localtime:ro
        ipv4_address: "{{ docker_network.prefix }}.20"
        traefik:
          - name: "{{ application }}-short"
            port: 8123
            rule: Host(`home.{{ common_tld }}`)
          - port: 8123
            rule: Host(`{{ application }}.{{ common_tld }}`)
        homer:
          name: Home Assistant
          service: Tools
          priority: 795
          subtitle: "Home automation"
          url: "https://home.{{ common_tld }}"
        network_mode: "host"
        privileged: true

    - name: Wait for config file
      ansible.builtin.wait_for:
        path: "{{ config_directory }}/configuration.yaml"

    - name: Configure default settings
      yedit:
        src: "{{ config_directory }}/configuration.yaml"
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      notify: Restart
      loop: "{{ _ha_config | dict2items }}"
      vars:
        _ha_config:
          http.use_x_forwarded_for: true
          http.trusted_proxies:
            - "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] | string }}"

    - name: Install Addons
      block:
        - name: Create addons folder
          ansible.builtin.file:
            path: "{{ home_assistant_dir }}"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"

        - name: Create python_scripts folder
          ansible.builtin.file:
            path: "{{ config_directory }}/python_scripts"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Copy Google Service Account file
          ansible.builtin.copy:
            src: "{{ files_directory }}/google-service-account.json"
            dest: "{{ config_directory }}/google-service-account.json"
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Create Eufy Security WS container
          ansible.builtin.include_role:
            name: docker_container
          vars:
            name: "eufy-security-ws"
            image: bropat/eufy-security-ws:0.9.4
            env:
              USERNAME: "{{ application }}{{ common_email_to }}"
              PASSWORD: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                32663633343362623462393864346631393638613933346166653764396530316264616364613065
                6339376630643833346639653530333835653037613363620a663464623137663031313931356432
                64383264306365656430363137353965643963313136616637626534396362376436626466303965
                3839336635646338380a386564356461393564373236333464343835646535663462303862303361
                6162
              LANGUAGE: "{{ common_language_iso_639 }}"
              COUNTRY: "{{ common_country_iso_3166 }}"
            volumes:
              - "{{ home_assistant_dir }}/eufy-security-ws:/data"

    - name: Configure integrations
      block:
        - name: Create integration configurations
          ansible.builtin.template:
            src: "{{ files_directory }}/integration_template.yaml.j2"
            dest: "{{ config_directory }}/{{ item.key }}.yaml"
            mode: "0644"
          notify: Restart
          loop: "{{ _home_assistant_config_integrations | dict2items }}"

        - name: Include integration config within main configuration file
          ansible.builtin.lineinfile:
            path: "{{ config_directory }}/configuration.yaml"
            regexp: "^{{ item.key }}"
            line: "{{ item.key }}: !include {{ item.key }}.yaml"
            state: present
          notify: Restart
          loop: "{{ _home_assistant_config_integrations | dict2items }}"
      vars:
        _home_assistant_config_integrations:
          notify: |
            - name: MOBILE_PHONES
              platform: group
              services:
                - service: mobile_app_calvin_s_galaxy_s21
                - service: mobile_app_tammy_s_galaxy_s21

          python_script: |

          logger: |
            default: warning
            logs:
              homeassistant.components.python_script: info

          google_assistant: |
            project_id: home-assistant-14ee3
            report_state: true
            secure_devices_pin: {{ home_assistant_google_secure_devices_pin }}
            service_account: !include google-service-account.json
            expose_by_default: false
            entity_config:
              cover.garage_door_garage:
                expose: true
                room: Garage
              switch.living_room_downlights_relay_0:
                expose: true
                room: Living Room
                name: Downlights
                aliases:
                  - Living Room Downlights
                  - Living Room Lights

    - name: Install HACS
      community.docker.docker_container_exec:
        container: "{{ application }}"
        command: bash -c "wget -O - https://get.hacs.xyz | bash -"
        chdir: /config
      notify: Restart
      register: _command_result
      changed_when: "'HACS directory already exist' not in _command_result.stdout"
