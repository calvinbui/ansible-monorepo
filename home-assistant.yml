---

- hosts: homelab

  vars:
    application: home-assistant

    home_assistant_dir: "{{ config_directory }}/config/addons"

    docker_network: "{{ networks.iot }}"

  handlers:
    - name: Restart
      ansible.builtin.command: docker restart "{{ application }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_root_group }}"
        mode: "0771"

    - name: Create postgres container
      ansible.builtin.import_role:
        name: postgres
      vars:
        postgres_version: 14
        postgres_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32633539336137363933353436636432623537373832643930306335333333616364376162346332
          3837343131623965653961313661643363353563626566350a346334356436653337393738383535
          36623461656638313732393732363933393734326438646462633830613238353535303637323431
          6562633838373165360a343239626161646138666432316566636337343530633963326666326665
          61306432353564653366363434666232343731343437343439306361346561366536643635353864
          3266623034333431363434306365336361333932613164306264

    - name: Create influxdb container
      ansible.builtin.import_role:
        name: influxdb
      vars:
        influxdb_version: 2.4
        influxdb_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          39383139643961303364626537306531346530373162353465356237386332636239343238633663
          6134353665323265386338633634393038663665316239390a623663343530666462623031633662
          37656435353865356539353566656133643339656130623938393639303631303665343431393963
          6263613830323737390a356566613732656163303430313162303330323330393461653432376166
          37333531656136633639373735616532663264633030373365623030336239666262
        influxdb_traefik:
          enable: "true"
        influxdb_homer:
          enable: "true"
          name: "Home Assistant InfluxDB"
          subtitle: "Long term data from devices"
          service: Monitoring
          priority: 250

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: ghcr.io/home-assistant/home-assistant:2022.9.3
        env:
          TZ: "{{ common_timezone }}"
        volumes:
          - "{{ config_directory }}/config:/config"
          - /etc/localtime:/etc/localtime:ro
        ipv4_address: "{{ docker_network.prefix }}.20"
        traefik:
          - name: "{{ application }}-short"
            port: 8123
            rule: Host(`home.{{ common_tld }}`)
          - port: 8123
            rule: Host(`{{ application }}.{{ common_tld }}`)
        homer:
          name: Home Assistant
          service: Tools
          priority: 795
          subtitle: "Home automation"
          url: "https://home.{{ common_tld }}"
        network_mode: "host"
        privileged: true

    - name: Wait for config file
      ansible.builtin.wait_for:
        path: "{{ config_directory }}/config/configuration.yaml"

    - name: Configure default settings
      yedit:
        src: "{{ config_directory }}/config/configuration.yaml"
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      notify: Restart
      loop: "{{ _ha_config | dict2items }}"
      vars:
        _ha_config:
          http.use_x_forwarded_for: true
          http.trusted_proxies:
            - "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] | string }}"

    - name: Install Addons
      block:
        - name: Create addons folder
          ansible.builtin.file:
            path: "{{ home_assistant_dir }}"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"

        - name: Create python_scripts folder
          ansible.builtin.file:
            path: "{{ config_directory }}/config/python_scripts"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Copy Google Service Account file
          ansible.builtin.copy:
            src: "{{ files_directory }}/google-service-account.json"
            dest: "{{ config_directory }}/config/google-service-account.json"
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Create Eufy Security WS container
          ansible.builtin.include_role:
            name: docker_container
          vars:
            name: "eufy-security-ws"
            image: bropat/eufy-security-ws:0.9.4
            env:
              USERNAME: "{{ application }}{{ common_email_to }}"
              PASSWORD: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                32663633343362623462393864346631393638613933346166653764396530316264616364613065
                6339376630643833346639653530333835653037613363620a663464623137663031313931356432
                64383264306365656430363137353965643963313136616637626534396362376436626466303965
                3839336635646338380a386564356461393564373236333464343835646535663462303862303361
                6162
              LANGUAGE: "{{ common_language_iso_639 }}"
              COUNTRY: "{{ common_country_iso_3166 }}"
            volumes:
              - "{{ home_assistant_dir }}/eufy-security-ws:/data"

    - name: Configure integrations
      block:
        - name: Create integration configurations
          ansible.builtin.template:
            src: "{{ files_directory }}/integration_template.yaml.j2"
            dest: "{{ config_directory }}/config/{{ item.key }}.yaml"
            mode: "0644"
          notify: Restart
          loop: "{{ _home_assistant_config_integrations | dict2items }}"

        - name: Include integration config within main configuration file
          ansible.builtin.lineinfile:
            path: "{{ config_directory }}/config/configuration.yaml"
            regexp: "^{{ item.key }}"
            line: "{{ item.key }}: !include {{ item.key }}.yaml"
            state: present
          notify: Restart
          loop: "{{ _home_assistant_config_integrations | dict2items }}"
      vars:
        home_assistant_google_secure_devices_pin: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32323164346637373262363162386333636531326133336139633236626138356136333835343965
          3438613663613164333634363137303030653662646462640a373163353661333732616665313761
          32303535316530656232363833613662386630653435303731366464346563326630313035356533
          3134336332663365390a633966653764313164306336316663326635313930306238646363303538
          6630
        _home_assistant_influxdb_token: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          38656665356237313932316331313366616663333365326431636634623363353638643937623239
          6634646436663635363936616230306165313836343035370a393735386535356131356265303338
          64366161373563653763663562383538336662366139383431656232376633366139333334306262
          3834396436346634630a363366396337366133316563386437663364353461323134656465396231
          35643232666132323739363439326161623333363630643439666336353662343530303731303666
          64376537356538393537316233633332393865346665363530323136353762646234623439363535
          63393766663239653463656534306363626235646564663265383833323230336234383731623761
          35323663306661363036393732363765313338663432356665363230323837643734336564616234
          3338
        _home_assistant_config_integrations:
          recorder: |
            db_url: {{ _postgresql_url }}
            exclude:
              domains:
                - automation
                - updater
              entity_globs:
                - sensor.weather_*
              entities:
                - sun.sun # Don't record sun data
                - sensor.last_boot # Comes from 'systemmonitor' sensor platform
                - sensor.date
              event_types:
                - call_service # Don't record service calls

          influxdb: |
            api_version: 2

            ssl: false
            verify_ssl: false

            host: {{ application }}-influxdb.{{ docker_network.name }}
            port: {{ _influxdb_port }}

            organization: {{ _influxdb_org }}
            bucket: {{ _influxdb_bucket }}

            # influx auth list
            token: {{ _home_assistant_influxdb_token }}

            tags:
              source: {{ application }}
            tags_attributes:
              - friendly_name
            default_measurement: units

          notify: |
            - name: MOBILE_PHONES
              platform: group
              services:
                - service: mobile_app_calvin_s_galaxy_s21
                - service: mobile_app_tammy_s_galaxy_s21

          python_script: |

          logger: |
            default: warning
            logs:
              homeassistant.components.python_script: info

          google_assistant: |
            project_id: home-assistant-14ee3
            report_state: true
            secure_devices_pin: {{ home_assistant_google_secure_devices_pin }}
            service_account: !include google-service-account.json
            expose_by_default: false
            entity_config:
              cover.garage_door_garage:
                expose: true
                room: Garage
              switch.living_room_downlights_relay_0:
                expose: true
                room: Living Room
                name: Downlights
                aliases:
                  - Living Room Downlights
                  - Living Room Lights

    - name: Install HACS
      community.docker.docker_container_exec:
        container: "{{ application }}"
        command: bash -c "wget -O - https://get.hacs.xyz | bash -"
        chdir: /config
      notify: Restart
      register: _command_result
      changed_when: "'HACS directory already exist' not in _command_result.stdout"
