---

- hosts: homelab

  vars:
    application: home-assistant
    docker_network: "{{ networks.iot }}"

    home_assistant_configuration: "{{ config_directory }}/config/configuration.yaml"
    home_assistant_automations_dir: "{{ config_directory }}/config/automations"
    home_assistant_addons_dir: "{{ config_directory }}/config/addons"

    home_assistant_integrations_dir: "{{ config_directory }}/config/integrations"
    home_assistant_integrations:
      google_secure_devices_pin: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        32323164346637373262363162386333636531326133336139633236626138356136333835343965
        3438613663613164333634363137303030653662646462640a373163353661333732616665313761
        32303535316530656232363833613662386630653435303731366464346563326630313035356533
        3134336332663365390a633966653764313164306336316663326635313930306238646363303538
        6630
      influxdb_token: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        38656665356237313932316331313366616663333365326431636634623363353638643937623239
        6634646436663635363936616230306165313836343035370a393735386535356131356265303338
        64366161373563653763663562383538336662366139383431656232376633366139333334306262
        3834396436346634630a363366396337366133316563386437663364353461323134656465396231
        35643232666132323739363439326161623333363630643439666336353662343530303731303666
        64376537356538393537316233633332393865346665363530323136353762646234623439363535
        63393766663239653463656534306363626235646564663265383833323230336234383731623761
        35323663306661363036393732363765313338663432356665363230323837643734336564616234
        3338
      calendar:
        - url: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            39643837333964346232623333653161363832663339656365663334333265306534643134653934
            6165363135623531646635356262616233316362313966330a313539636137376562653862313237
            64663264636130333034643733386437663864386637366134306461313161323930383938656464
            6233356433386532300a336561626262376236306235353337623234656538323233636564623032
            35326566336239373137306636393435353331656433366466616637643630373637646362393431
            64326339333939303339363963393431656439653761313338643635366432383761303437633933
            64613264643732383232633864366431353634386237633430326464353233393538666635643261
            62643837356365366330
          username: calvin
          password: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            33343663623633396334303736373364373532616564316634636130303164333332343964643336
            3437613239356664336437373531643539373630366435390a313939353430383031653432633334
            63336134373733616330303135356431643666383266643138396363333061343238623438313364
            3839376136636630300a386465373466363465343634623835316231326362633565663264376436
            32386664393066346430393739333038653866326264666463396164303035333964
          custom_calendars:
            - name: Calvin's Calendar
              calendar: My Calendar
              search: ".*"

  handlers:
    - name: Restart
      ansible.builtin.command: docker restart "{{ application }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_root_group }}"
        mode: "0771"

    - name: Create postgres container
      tags:
        - integrations
      ansible.builtin.import_role:
        name: postgres
      vars:
        postgres_version: 14
        postgres_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32633539336137363933353436636432623537373832643930306335333333616364376162346332
          3837343131623965653961313661643363353563626566350a346334356436653337393738383535
          36623461656638313732393732363933393734326438646462633830613238353535303637323431
          6562633838373165360a343239626161646138666432316566636337343530633963326666326665
          61306432353564653366363434666232343731343437343439306361346561366536643635353864
          3266623034333431363434306365336361333932613164306264

    - name: Create influxdb container
      tags:
        - integrations
      ansible.builtin.import_role:
        name: influxdb
      vars:
        influxdb_version: 2.4
        influxdb_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          39383139643961303364626537306531346530373162353465356237386332636239343238633663
          6134353665323265386338633634393038663665316239390a623663343530666462623031633662
          37656435353865356539353566656133643339656130623938393639303631303665343431393963
          6263613830323737390a356566613732656163303430313162303330323330393461653432376166
          37333531656136633639373735616532663264633030373365623030336239666262
        influxdb_traefik:
          enable: "true"
        influxdb_homer:
          enable: "true"
          name: "Home Assistant InfluxDB"
          subtitle: "Long term data from devices"
          service: Monitoring
          priority: 250

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: ghcr.io/home-assistant/home-assistant:2022.11.1
        env:
          TZ: "{{ common_timezone }}"
        volumes:
          - "{{ config_directory }}/config:/config"
          - /etc/localtime:/etc/localtime:ro
        ipv4_address: "{{ docker_network.prefix }}.20"
        traefik:
          - name: "{{ application }}-short"
            port: 8123
            rule: Host(`home.{{ common_tld }}`)
          - port: 8123
            rule: Host(`{{ application }}.{{ common_tld }}`)
        homer:
          name: Home Assistant
          service: Tools
          priority: 795
          subtitle: "Home automation"
          url: "https://home.{{ common_tld }}"
        network_mode: "host"
        privileged: true

    - name: Wait for config file
      ansible.builtin.wait_for:
        path: "{{ home_assistant_configuration }}"

    - name: Configure default settings
      yedit: # noqa fqcn[action]
        src: "{{ home_assistant_configuration }}"
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      notify: Restart
      loop: "{{ _ha_config | dict2items }}"
      vars:
        _ha_config:
          http.use_x_forwarded_for: true
          http.trusted_proxies:
            - "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] | string }}"

    - name: Configure integrations
      tags:
        - integrations
      block:
        - name: Create integration folder
          ansible.builtin.file:
            path: "{{ home_assistant_integrations_dir }}"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"

        - name: Template integrations
          ansible.builtin.template:
            src: "{{ item }}"
            dest: "{{ home_assistant_integrations_dir }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
            mode: "0644"
            validate: "echo checking %s && docker exec {{ application }}/usr/local/bin/hass --script check_config --config /config"
          notify: Restart
          with_fileglob:
            - "{{ files_directory }}/integrations/*"

        - name: Include integration config within main configuration file
          ansible.builtin.lineinfile:
            path: "{{ home_assistant_configuration }}"
            regexp: "^{{ item | basename | regex_replace('\\.yaml.j2$', '') }}"
            line: "{{ item | basename | regex_replace('\\.yaml.j2$', '') }}: !include integrations/{{ item | basename | regex_replace('\\.j2$', '') }}"
            state: present
          notify: Restart
          with_fileglob:
            - "{{ files_directory }}/integrations/*"

    - name: Install Addons
      block:
        - name: Create addons folder
          ansible.builtin.file:
            path: "{{ home_assistant_addons_dir }}"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"

        - name: Create python_scripts folder
          tags:
            - integrations
          ansible.builtin.file:
            path: "{{ config_directory }}/config/python_scripts"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Copy Google Service Account file
          tags:
            - integrations
          ansible.builtin.copy:
            src: "{{ files_directory }}/google-service-account.json"
            dest: "{{ home_assistant_integrations_dir }}/google-service-account.json"
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Create Eufy Security WS container
          ansible.builtin.include_role:
            name: docker_container
          vars:
            name: "eufy-security-ws"
            image: bropat/eufy-security-ws:1.0.0
            env:
              USERNAME: "{{ application }}{{ common_email_to }}"
              PASSWORD: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                32663633343362623462393864346631393638613933346166653764396530316264616364613065
                6339376630643833346639653530333835653037613363620a663464623137663031313931356432
                64383264306365656430363137353965643963313136616637626534396362376436626466303965
                3839336635646338380a386564356461393564373236333464343835646535663462303862303361
                6162
              LANGUAGE: "{{ common_language_iso_639 }}"
              COUNTRY: "{{ common_country_iso_3166 }}"
            volumes:
              - "{{ home_assistant_addons_dir }}/eufy-security-ws:/data"

        - name: Create RTSP Simple Server for Eufy container
          ansible.builtin.include_role:
            name: docker_container
          vars:
            name: "eufy-rtsp"
            image: aler9/rtsp-simple-server:v0.20.1
            env:
              RTSP_PROTOCOLS: tcp

    - name: Configure Automations
      tags:
        - automations
      block:
        - name: Split ui created automations
          ansible.builtin.lineinfile:
            dest: "{{ home_assistant_configuration }}"
            search_string: 'automation: !include automations.yaml'
            line: 'automation ui: !include automations.yaml'
            state: present
          notify: Restart

        - name: Create custom automations folder
          ansible.builtin.file:
            path: "{{ home_assistant_automations_dir }}"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Add custom automations folder to configuration
          ansible.builtin.lineinfile:
            dest: "{{ home_assistant_configuration }}"
            line: 'automation custom: !include_dir_merge_list automations/'
            state: present
          notify: Restart

        - name: Copy custom automations
          ansible.builtin.copy:
            src: "{{ files_directory }}/automations/"
            dest: "{{ home_assistant_automations_dir }}"
            mode: "0644"
          notify: Restart

    - name: Copy dashboard
      tags:
        - theme
      ansible.posix.synchronize:
        src: "{{ files_directory }}/ui_lovelace_minimalist/"
        dest: "{{ config_directory }}/config/ui_lovelace_minimalist/"
        delete: true
        owner: false
        group: false

    - name: Install HACS
      community.docker.docker_container_exec:
        container: "{{ application }}"
        command: bash -c "wget -O - https://get.hacs.xyz | bash -"
        chdir: /config
      notify: Restart
      register: _command_result
      changed_when: "'HACS directory already exist' not in _command_result.stdout"
