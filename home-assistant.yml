---

- hosts: homeserver

  vars:
    application: home-assistant
    container_network: "{{ networks.iot }}"

    home_assistant_configuration: "{{ config_directory }}/config/configuration.yaml"
    home_assistant_automations_dir: "{{ config_directory }}/config/automations"
    home_assistant_addons_dir: "{{ config_directory }}/config/addons"

    home_assistant_integrations_dir: "{{ config_directory }}/config/integrations"

  handlers:
    - name: Restart
      containers.podman.podman_container:
        name: "{{ application }}"
        force_restart: true

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_root_group }}"
        mode: "0771"

    - name: Create postgres container
      tags:
        - integrations
      ansible.builtin.include_role:
        name: postgres
      vars:
        postgres_version: 17
        postgres_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32633539336137363933353436636432623537373832643930306335333333616364376162346332
          3837343131623965653961313661643363353563626566350a346334356436653337393738383535
          36623461656638313732393732363933393734326438646462633830613238353535303637323431
          6562633838373165360a343239626161646138666432316566636337343530633963326666326665
          61306432353564653366363434666232343731343437343439306361346561366536643635353864
          3266623034333431363434306365336361333932613164306264

    - name: Create container
      ansible.builtin.include_role:
        name: podman_container
      vars:
        image: ghcr.io/home-assistant/home-assistant:2025.9.3
        ip: "{{ container_network.subnet | ansible.utils.nthhost(100) }}"
        env:
          TZ: "{{ common_timezone }}"
        volumes:
          - "{{ config_directory }}/config:/config"
          - /etc/localtime:/etc/localtime:ro
        traefik:
          -
            name: "{{ application }}-short"
            port: 8123
            rule: Host(`home.{{ common_tld }}`)
          -
            port: 8123
            rule: Host(`{{ application }}.{{ common_tld }}`)
        homepage:
          name: Home Assistant
          group: Home Automation
          weight: 50
          description: "Home automation"
          href: "https://home.{{ common_tld }}"
        privileged: true

    - name: Wait for config file
      ansible.builtin.wait_for:
        path: "{{ home_assistant_configuration }}"

    - name: Configure integrations
      tags:
        - integrations
      block:
        - name: Create integration folder
          ansible.builtin.file:
            path: "{{ home_assistant_integrations_dir }}"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"

        - name: Template integrations
          ansible.builtin.template:
            src: "{{ item }}"
            dest: "{{ home_assistant_integrations_dir }}/{{ item | ansible.builtin.basename | ansible.builtin.regex_replace('\\.j2$', '') }}"
            mode: "0644"
          notify: Restart
          with_fileglob:
            - "{{ files_directory }}/integrations/*"

        - name: Include integration config within main configuration file
          ansible.builtin.lineinfile:
            path: "{{ home_assistant_configuration }}"
            regexp: "^{{ item | ansible.builtin.basename | ansible.builtin.regex_replace('\\.yaml.j2$', '') }}"
            line: "{{ item | ansible.builtin.basename | ansible.builtin.regex_replace('\\.yaml.j2$', '') }}: !include integrations/{{ item | ansible.builtin.basename | ansible.builtin.regex_replace('\\.j2$', '') }}"
            state: present
          notify: Restart
          with_fileglob:
            - "{{ files_directory }}/integrations/*"

        - name: Validate configuration
          containers.podman.podman_container_exec:
            name: "{{ application }}"
            command: python -m homeassistant --script check_config --config /config
          changed_when: false

    - name: Install Addons
      block:
        - name: Create addons folder
          ansible.builtin.file:
            path: "{{ home_assistant_addons_dir }}"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"

        - name: Create python_scripts folder
          tags:
            - integrations
          ansible.builtin.file:
            path: "{{ config_directory }}/config/python_scripts"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Copy Google Service Account file
          tags:
            - integrations
          ansible.builtin.copy:
            src: "{{ files_directory }}/google-service-account.json"
            dest: "{{ home_assistant_integrations_dir }}/google-service-account.json"
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"
          notify: Restart

        - name: Create Eufy Security WS container
          ansible.builtin.include_role:
            name: podman_container
          vars:
            container_name: eufy-security-ws
            image: docker.io/bropat/eufy-security-ws:1.9.3
            env:
              USERNAME: "{{ application }}{{ common_email_to }}"
              PASSWORD: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                32663633343362623462393864346631393638613933346166653764396530316264616364613065
                6339376630643833346639653530333835653037613363620a663464623137663031313931356432
                64383264306365656430363137353965643963313136616637626534396362376436626466303965
                3839336635646338380a386564356461393564373236333464343835646535663462303862303361
                6162
              LANGUAGE: "{{ common_language_iso_639 }}"
              COUNTRY: "{{ common_country_iso_3166 }}"
              TRUSTED_DEVICE_NAME: "{{ application }}"
              ACCEPT_INVITATIONS: "true"
            volumes:
              - "{{ home_assistant_addons_dir }}/eufy-security-ws:/data"

        - name: Create govee2mqtt container
          ansible.builtin.include_role:
            name: podman_container
          vars:
            container_name: govee2mqtt
            image: ghcr.io/wez/govee2mqtt:latest
            env:
              GOVEE_EMAIL: govee{{ common_email_to }}
              GOVEE_PASSWORD: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                63626135336533336464663233333834663839333735346164636336306138383234373130666339
                3638653662623462343666623664663864313562383430330a616631333435396536376531386234
                63313266353363343031663036656634326661363766616137373736346666333032326365303334
                6230363664313261300a373161353363656564613964323231666333613838636538306236353739
                31613739653138396132363061613737643333363638623761353033396334623865
              GOVEE_API_KEY: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                30376266623532346465363265323737643431373664386430376532333665336261383830393330
                3963383166626466653764316163636435383064343832330a303835613061663831353962616433
                32376331303563623963313065363632656633393632303838363832336366336439363538636231
                3761346139666433320a656130363838636537656631633266373361623463336233363136636439
                39663838646335623339326136623861646633626461376233373935636134393830343532623966
                6338613462656433343035393333663239323331316563303266

              GOVEE_MQTT_HOST: "{{ mqtt_host }}"
              GOVEE_MQTT_PORT: "{{ mqtt_port | ansible.builtin.string }}"
              GOVEE_MQTT_USER: "govee2mqtt"
              GOVEE_MQTT_PASSWORD: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                34643464303164333833363364316261356339643035316664386263636538346462316532626435
                3432373866383966383863326334333631326361313565390a326561333466623832626464633937
                38323162366534663931303830363535363436613962313466393836363863656533323464373132
                3865313737383932330a323138396666363061376335633832326530326634653032363535633033
                39633232363530663238613331316432346634653661373063396135333937386532

              TZ: "{{ common_timezone }}"

    - name: Configure Automations
      tags:
        - automations
      block:
        - name: Split ui created automations
          ansible.builtin.lineinfile:
            dest: "{{ home_assistant_configuration }}"
            search_string: 'automation: !include automations.yaml'
            line: 'automation ui: !include automations.yaml'
            state: present
          notify: Restart

        - name: Create custom automations folder
          ansible.builtin.file:
            path: "{{ home_assistant_automations_dir }}"
            state: directory
            owner: "{{ common_root_id }}"
            group: "{{ common_root_group }}"
            mode: "0771"

        - name: Add custom automations folder to configuration
          ansible.builtin.lineinfile:
            dest: "{{ home_assistant_configuration }}"
            line: 'automation custom: !include_dir_merge_list automations/'
            state: present
          notify: Restart

        - name: Copy custom automations
          ansible.builtin.copy:
            src: "{{ item }}"
            dest: "{{ home_assistant_automations_dir }}/{{ item | ansible.builtin.basename }}"
            mode: "0644"
          notify: Restart
          with_fileglob:
            - "{{ files_directory }}/automations/*.yaml"

        - name: Template custom automations
          ansible.builtin.template:
            src: "{{ item }}"
            dest: "{{ home_assistant_automations_dir }}/{{ item | ansible.builtin.basename | ansible.builtin.regex_replace('\\.j2$', '') }}"
            mode: "0644"
          notify: Restart
          with_fileglob:
            - "{{ files_directory }}/automations/*.j2"

    - name: Copy dashboard
      tags:
        - dashboard
      ansible.posix.synchronize:
        src: "{{ files_directory }}/ui_lovelace_minimalist/"
        dest: "{{ config_directory }}/config/ui_lovelace_minimalist/"
        delete: false
        owner: false
        group: false
        perms: false

    - name: Template dashboard items
      tags:
        - dashboard
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ config_directory }}/config/ui_lovelace_minimalist/dashboard/pages/{{ item | ansible.builtin.basename | ansible.builtin.regex_replace('\\.j2$', '') }}"
        mode: "0644"
        owner: "root"
        group: "root"
      with_fileglob:
        - "{{ files_directory }}/ui_lovelace_minimalist/dashboard/pages/*.j2"

    - name: Install HACS
      containers.podman.podman_container_exec:
        name: "{{ application }}"
        command: bash -c "wget -O - https://get.hacs.xyz | bash -"
        workdir: /config
      notify: Restart
      register: _command_result
      changed_when: "'HACS directory already exist' not in _command_result.stdout"
