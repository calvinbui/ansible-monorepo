---

- hosts: homelab

  vars:
    application: nzbget

    docker_network: "{{ networks.pub }}"

  handlers:
    - name: Restart
      ansible.builtin.command: docker restart "{{ application }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_root_group }}"
        mode: "0771"

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: lscr.io/linuxserver/nzbget:21.1.20220922
        volumes:
          - "{{ config_directory }}:/config"
          - "{{ common_directory_download }}:{{ common_mounted_directory_download }}"
        env:
          PUID: "{{ common_user_id | string }}"
          PGID: "{{ common_root_group | string }}"
          TZ: "{{ common_timezone }}"
          UMASK: "022"
        traefik:
          - port: 6789
            auth: basic
        homer:
          name: NZBGet
          service: Download
          priority: 990
          subtitle: "Download files from Usenet"

    - name: Wait for config
      ansible.builtin.wait_for:
        path: "{{ config_directory }}/nzbget.conf"

    - name: Configure
      ansible.builtin.lineinfile:
        dest: "{{ config_directory }}/nzbget.conf"
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      loop: "{{ nzbget_config | dict2items }}"
      notify: Restart
      vars:
        nzbget_config:
          # PATHS
          MainDir: "{{ common_mounted_directory_download }}"
          DestDir: '${MainDir}'
          InterDir: '${MainDir}/Intermediate/Incomplete'
          NzbDir: '${MainDir}/Intermediate/Watch'
          QueueDir: '${MainDir}/Intermediate/Queue'
          TempDir: '${MainDir}/Intermediate/Temp'
          WebDir: '${AppDir}/webui'
          ScriptDir: '/config/scripts'
          LockFile: '/config/nzbget.lock'
          LogFile: '/config/nzbget.log'
          ConfigTemplate: '${AppDir}/webui/nzbget.conf.template'

          # NEWS-SERVERS
          Server1.Name: 'secure.news.thecubenet.com'
          Server1.Level: '0'
          Server1.Optional: 'no'
          Server1.Group: '0'
          Server1.Host: 'secure.news.thecubenet.com'
          Server1.Port: '563'
          Server1.Username: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            64366463653637653066646261623065393463336139666464396263633566653864613161623939
            3133623430306462333334373532386366636438353861650a346632373637313833356563623334
            31333839343331396231643862643439636630326465363261316235393733633164656237393663
            3431633662643761370a313738633965326162643132623231313730313431663434303264656633
            61613036366533333730333435386265313437353764303462633465636262663664
          Server1.Password: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            30396565356235636465666365646332326638633336393362356439333265616363643137656132
            3135323132663332653431326163656137633333613936390a623330613139366536666336623736
            37376131376532633737393532646435363935393930663765373065353330366534643536356463
            3432313035656230340a353363356538333935383637613633376663666430326363633464383064
            3533
          Server1.JoinGroup: 'no'
          Server1.Encryption: 'yes'
          Server1.Cipher: 'AES128-SHA'
          Server1.Connections: '50'
          Server1.Retention: "{{ common_usenet_retention }}"
          Server1.IpVersion: 'ipv4'
          Server1.Notes: ''

          # SECURITY
          ControlUsername: ''
          ControlPassword: ''

          # CATEGORIES
          Category1.Name: 'Movies'
          Category1.DestDir: 'Movies'
          Category1.Aliases: 'movies*'
          Category2.Name: 'TV'
          Category2.DestDir: 'TV'
          Category2.Unpack: 'yes'
          Category3.Name: 'Games'
          Category3.DestDir: 'Games'
          Category3.Aliases: 'Games'
          Category4.Name: 'Books'
          Category4.DestDir: 'Books'
          Category4.Aliases: 'Books'
          Category5.Name: 'Music'
          Category5.DestDir: 'Music'
          Category5.Aliases: 'Music'
          Server1.Active: 'yes'

          # INCOMING NZBS
          DupeCheck: 'no'

          # DOWNLOAD QUEUE
          FlushQueue: 'no'
          ContinuePartial: 'no'
          ArticleCache: '500'
          WriteBuffer: '1024'
          PostStrategy: 'rocket'

          # LOGGING
          WriteLog: 'rotate'

          # CHECK AND REPAIR
          CrcCheck: 'yes'
          ParCheck: 'auto'
          ParQuick: 'yes'
          ParBuffer: '8192'
          DirectRename: 'yes'
          ParPauseQueue: 'no'

          # UNPACK
          DirectUnpack: 'yes'
          UnpackPauseQueue: 'no'
          UnrarCmd: '${AppDir}/unrar'
          SevenZipCmd: '${AppDir}/7za'

          # EXTENSION SCRIPTS
          ScriptPauseQueue: 'yes'
