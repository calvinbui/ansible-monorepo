---

- hosts: homelab

  vars:
    application: overseerr

    docker_network: "{{ networks.pub }}"

  handlers:
    - name: Restart
      community.docker.docker_container:
        name: "{{ application }}"
        restart: true
        comparisons:
          '*': ignore

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0771"

    - name: Create container
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: sctx/overseerr:1.33.2
        env:
          TZ: "{{ common_timezone }}"
        volumes:
          - "{{ config_directory }}:/app/config"
        user: "{{ common_user_id }}:{{ common_group_id }}"
        traefik:
          - port: 5055
        homepage:
          group: Media
          weight: 100
          description: "Request and discover media"
          widget:
            key: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              36376362623361376437353264353732313638333038353063646463613839633234633330633839
              3433623337353638393133323932653036393432343564330a366163393838356239343162643238
              39326435316262663964356338393261343330353034623465663534353238396639613638636665
              6430616530326464300a626662636364663561313762636338373638373236386633663464343332
              38313737313666373265376362383033643764636463343238623362656563626238323265636334
              39343034366338663563656363383965663063373036623132373061613734643330666666363335
              66653634303032666239393938643461653835633261633138656639316335306531626133353865
              37376238643233646436
            fields: '["pending", "processing"]'
        blackbox:
          path: /api/v1/status

    - name: Wait for config
      ansible.builtin.wait_for:
        path: "{{ config_directory }}/settings.json"

    - name: Initialise Sonarr array
      block:
        - name: Check Sonarr array
          json_patch:
            src: "{{ config_directory }}/settings.json"
            operations:
              - op: test
                path: sonarr/0/id
                value: 0
              - op: test
                path: sonarr/1/id
                value: 1
          register: _overseer_sonarr_exists

        - name: Add Sonarr array
          json_patch:
            src: "{{ config_directory }}/settings.json"
            operations:
              - op: add
                path: sonarr/-
                value:
                  id: 0
              - op: add
                path: sonarr/-
                value:
                  id: 1
          when: not _overseer_sonarr_exists.tested

    - name: Initialise Radarr array
      block:
        - name: Check Radarr array
          json_patch:
            src: "{{ config_directory }}/settings.json"
            operations:
              - op: test
                path: radarr/0/id
                value: 0
          register: _overseer_radarr_exists

        - name: Add Radarr array
          json_patch:
            src: "{{ config_directory }}/settings.json"
            operations:
              - op: add
                path: radarr/-
                value:
                  id: 0
          when: not _overseer_radarr_exists.tested

    - name: Configure
      json_patch: # noqa fqcn[action]
        src: "{{ config_directory }}/settings.json"
        pretty: true
        operations:
          - op: add
            path: "{{ item.key }}"
            value: "{{ item.value }}"
      loop: "{{ _overseerr_configuration | dict2items }}"
      notify: Restart
      vars:
        _overseerr_configuration:
          main/applicationUrl: "https://{{ application }}.{{ common_tld }}"
          main/cacheImages: true
          main/localLogin: false
          main/trustProxy: true
          main/defaultPermissions: 75497504

          plex/name: plex
          plex/ip: plex.{{ networks.pub.name }}
          plex/webAppUrl: "https://plex.{{ common_tld }}"

          tautulli/hostname: tautulli.{{ networks.pub.name }}
          tautulli/port: 8181
          tautulli/useSsl: false
          tautulli/apiKey: "{{ tautulli_api_key }}"
          tautulli/externalUrl: "https://tautulli.{{ common_tld }}"

          radarr/0/isDefault: true
          radarr/0/name: Radarr
          radarr/0/hostname: "radarr.{{ networks.pub.name }}"
          radarr/0/port: 7878
          radarr/0/useSsl: false
          radarr/0/apiKey: "{{ radarr_api_key }}"
          radarr/0/externalUrl: "https://radarr.{{ common_tld }}"
          radarr/0/syncEnabled: true
          radarr/0/preventSearch: false

          sonarr/0/isDefault: true
          sonarr/0/name: Sonarr
          sonarr/0/hostname: "sonarr.{{ networks.pub.name }}"
          sonarr/0/port: 8989
          sonarr/0/useSsl: false
          sonarr/0/apiKey: "{{ sonarr_api_key }}"
          sonarr/0/activeProfileName: "4K"
          sonarr/0/activeDirectory: "{{ common_mounted_directory_tv }}"
          sonarr/0/enableSeasonFolders: true
          sonarr/0/externalUrl: "https://sonarr.{{ common_tld }}"
          sonarr/0/syncEnabled: true
          sonarr/0/preventSearch: false

          sonarr/1/isDefault: false
          sonarr/1/name: Sonarr Anime
          sonarr/1/hostname: "sonarr-anime.{{ networks.pub.name }}"
          sonarr/1/port: 8989
          sonarr/1/useSsl: false
          sonarr/1/apiKey: "{{ sonarr_api_key }}"
          sonarr/1/activeProfileName: "Anime"
          sonarr/1/activeDirectory: "{{ common_mounted_directory_tv }}"
          sonarr/1/activeAnimeProfileName: "Anime"
          sonarr/1/activeAnimeDirectory: "{{ common_mounted_directory_tv }}"
          sonarr/1/enableSeasonFolders: true
          sonarr/1/externalUrl: "https://sonarr-anime.{{ common_tld }}"
          sonarr/1/syncEnabled: true
          sonarr/1/preventSearch: false

          notifications/agents/webhook/enabled: true
          notifications/agents/webhook/types: 146
          notifications/agents/webhook/options/webhookUrl: "https://mattermost.{{ common_tld }}/hooks/{{ _overseerr_mattermost_webhook_id }}"
          # the json webhook requires:
          # - a starting and ending quote
          # - single backslashes on double quotes
          notifications/agents/webhook/options/jsonPayload: >-
            {{
              _overseer_webhook_payload
              | to_json
              | regex_replace('"', '\\"')
              | regex_replace('^', '"')
              | regex_replace('$', '"')
              | b64encode
            }}

        _overseerr_mattermost_webhook_id: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32383630663939376465333938323565623663306334376230643637646639313262356661646339
          6338666264353762393638303763363163613630353835380a363266616230353738316136623462
          38393536663664333465363339333635356330323461393062613662666562343162643162353563
          6462336265343130380a643064366661326435376665343166303234313165666361623335623362
          31646138613861653261666566613132306166656334373163336239316263666134
        _overseer_webhook_payload: |
          {
            "attachments": [
              {
                "author_name": "{{ '{{requestedBy_username}}' }}",
                "author_icon": "{{ '{{requestedBy_avatar}}' }}",
                "title": "{{ '{{subject}}' }} - {{ '{{event}}' }}",
                "title_link": "https://{{ application }}.{{ common_tld }}/{{ '{{media_type}}' }}/{{ '{{media_tmdbid}}' }}{{ '{{media_tvdbid}}' }}",
                "text": "{{ '{{message}}' }}",
                "image_url": "{{ '{{image}}' }}"
              }
            ]
          }

    - name: Send message
      ansible.builtin.debug:
        msg: More configuration may be required via the UI to set paths and quality profiles
