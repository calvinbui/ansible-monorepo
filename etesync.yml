---

- hosts: homelab

  vars:
    application: etesync

    docker_network: "{{ networks.pub }}"

  handlers:
    - name: Restart
      ansible.builtin.command: docker restart "{{ application }}"

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_group_id }}"
        mode: "0771"

    - name: Create postgres container
      ansible.builtin.include_role:
        name: postgres
      vars:
        postgres_version: 14
        postgres_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          39363333323331656232363834356535646337303264376430313062663139316439633736306134
          3535356636393039656537313532316331333830646232390a643364323734373865353832383337
          61366562663934336139613531393366643237623066616436353836643834626566313737663261
          3562613633383134630a323437373931376131313764616662323965366663646562633464643530
          36313739376533326131343365376432393936613365613833663631313663643966363138343663
          38323830613066346466373662666661353132383863366135636434333439666264353965373133
          36336563393634363332366337343034323236643033323066663534343438663238326261643664
          62633133313039393537

    - name: Create data directory
      ansible.builtin.file:
        path: "{{ config_directory }}/etesync"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_group_id }}"
        mode: "0771"
      register: _data_dir

    - name: "Create {{ application }} container"
      ansible.builtin.include_role:
        name: docker_container
      vars:
        image: victorrds/etebase:0.9.1-alpine
        user: "{{ common_user_id }}:{{ common_group_id }}"
        env:
          SERVER: "http-socket"

          # Trigger database update/migration every time the container starts
          AUTO_UPDATE: "false"

          DEBUG: "false"

          SUPER_USER: "admin"
          SUPER_PASS: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            33363262313266393161633532316531376536623561366230623266353735373966613738386434
            3338336662353536386132356238323835356664393230660a333561353962343662396536356265
            31313065353832373137333635356639623663613936666535376335373131303461393563303231
            6437396534623466320a366633643434363234333234373531373763623064383637373437633766
            65633062613633626161636237323935303034623865663836376261383536653563666264303636
            39326163333033396239623166386135613235306235623135613134316532333161656661343034
            37646539333730316166613865313866626637326337626435306333383432383533396533373935
            37333362656663303761
          SUPER_EMAIL: "{{ application }}-admin{{ common_email_to }}"

          DB_ENGINE: "postgres"
          DATABASE_NAME: "{{ _postgres_database }}"
          DATABASE_USER: "{{ _postgres_username }}"
          DATABASE_PASSWORD: "{{ _postgres_password }}"
          DATABASE_HOST: "{{ _postgres_hostname }}"
          DATABASE_PORT: "{{ _postgres_port | string }}"

          LANGUAGE_CODE: "{{ common_locale | lower }}"
          TIME_ZONE: "{{ common_timezone }}"
        volumes:
          - "{{ _data_dir.path }}:/data"
        traefik:
          - port: 3735
        homer:
          name: EteSync Admin
          service: Tools
          priority: 170
          subtitle: "Contacts, calendars, tasks & notes"
          url: "https://{{ application }}.{{ common_tld }}/admin"

    - name: Create dav directory
      ansible.builtin.file:
        path: "{{ config_directory }}/dav"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_group_id }}"
        mode: "0771"
      register: _dav_dir

    - name: "Create {{ application }}-dav container"
      ansible.builtin.include_role:
        name: docker_container
      vars:
        name: "{{ application }}-dav"
        image: etesync/etesync-dav:latest
        volumes:
          - "{{ _dav_dir.path }}:/data"
        traefik:
          - port: 37358
            rule: Host(`{{ application }}-dav.{{ common_tld }}`)
        homer:
          name: EteSync DAV
          service: Tools
          priority: 180
          subtitle: "CalDAV & CardDAV adapter"
          url: "https://{{ application }}-dav.{{ common_tld }}"

    - name: Create web directory
      ansible.builtin.file:
        path: "{{ config_directory }}/web"
        state: directory
        owner: "{{ common_user_id }}"
        group: "{{ common_group_id }}"
        mode: "0771"
      register: _web_dir

    - name: "Create {{ application }}-web container"
      ansible.builtin.include_role:
        name: docker_container
      vars:
        name: "{{ application }}-web"
        image: nginx:1.23.1-alpine
        volumes:
          - "{{ _web_dir.path }}:/usr/share/nginx/html"
        labels:
          '{
            "chadburn.enabled": "true",
            "chadburn.job-exec.{{ application }}-web.user": "0",
            "chadburn.job-exec.{{ application }}-web.schedule": "@every 1d",
            "chadburn.job-exec.{{ application }}-web.command": "sh -c \"cd /usr/share/nginx/html; curl -s https://pim.etesync.com/etesync-web.tgz | tar zx --strip-components 1\"",
            "chadburn.job-exec.{{ application }}-web.tty": "false",
            "chadburn.job-exec.{{ application }}-web.no-overlap": "true"
          }'
        traefik:
          - port: 80
            rule: Host(`{{ application }}-web.{{ common_tld }}`)
        homer:
          name: EteSync Web
          service: Tools
          priority: 190
          subtitle: "The EteSync Web App Client"
          url: "https://{{ application }}-web.{{ common_tld }}"
