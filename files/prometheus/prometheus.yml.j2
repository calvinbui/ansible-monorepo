#jinja2: lstrip_blocks: "true", trim_blocks: "false"
---

global:
  scrape_interval: 60s
  evaluation_interval: 60s

rule_files:
  - '/rules/*.yml'

scrape_configs:
  - job_name: docker_containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
    relabel_configs:
      - # Only keep containers that have a `prometheus.enable = true` label.
        action: keep
        source_labels: [__meta_docker_container_label_prometheus_enable]
        regex: true
      - # Use the task labels that are prefixed by `prometheus(.-_)`.
        action: labelmap
        regex: __meta_docker_container_label_prometheus_(.+)
        replacement: $1
      - # replace the default port 80 with our own
        action: replace
        source_labels: [__address__, __meta_docker_container_label_prometheus_port]
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - # replace the scheme with our own
        action: replace
        regex: (https?)
        source_labels: [__meta_docker_container_label_prometheus_scheme]
        target_label: __scheme__
      - # replace the path with our own
        action: replace
        regex: (.+)
        source_labels: [__meta_docker_container_label_prometheus_path]
        target_label: __metrics_path__

  - job_name: blackbox_static
    scrape_timeout: 30s
    metrics_path: /probe
    params:
      module: [http]
    static_configs:
      - targets:
        {% for service in services %}
        {% for item in service['items'] %}
        {% if item.monitor %}
        - {{ item.url }}
        {% endif %}
        {% endfor %}
        {% endfor %}
    relabel_configs:
      -
        source_labels: [__address__]
        target_label: __param_target
      -
        source_labels: [__param_target]
        target_label: instance
      -
        target_label: __address__
        replacement: blackbox_exporter.{{ docker_network.name }}:9115

  - job_name: blackbox_docker_http
    scrape_interval: 120s
    scrape_timeout: 30s
    metrics_path: /probe
    params:
      module: [http]
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
    relabel_configs:
      - # Only keep containers that have a `blackbox.enable = true` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_enable]
        regex: true
      - # Only keep containers that have a `blackbox.auth = none` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_auth]
        regex: 'none'
      - # Only keep containers that have a `blackbox.target` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_target]
        regex: ".+"
      - # Get target from `blackbox.target` label
        source_labels: [__meta_docker_container_label_blackbox_target]
        target_label: __param_target
      -
        source_labels: [__param_target]
        target_label: instance
      -
        target_label: __address__
        replacement: blackbox_exporter.{{ docker_network.name }}:9115

  - job_name: blackbox_docker_http_basic_auth
    scrape_interval: 120s
    scrape_timeout: 30s
    metrics_path: /probe
    params:
      module: [http_basic_auth]
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
    relabel_configs:
      - # Only keep containers that have a `blackbox.enable = true` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_enable]
        regex: true
      - # Only keep containers that have a `blackbox.auth = none` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_auth]
        regex: 'basic'
      - # Only keep containers that have a `blackbox.target` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_target]
        regex: ".+"
      - # Get target from `blackbox.target` label
        source_labels: [__meta_docker_container_label_blackbox_target]
        target_label: __param_target
      -
        source_labels: [__param_target]
        target_label: instance
      -
        target_label: __address__
        replacement: blackbox_exporter.{{ docker_network.name }}:9115

  - job_name: blackbox_docker_http_page_auth
    scrape_interval: 120s
    scrape_timeout: 30s
    metrics_path: /probe
    params:
      module: [http_page_auth]
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
    relabel_configs:
      - # Only keep containers that have a `blackbox.enable = true` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_enable]
        regex: true
      - # Only keep containers that have a `blackbox.auth = none` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_auth]
        regex: 'page'
      - # Only keep containers that have a `blackbox.target` label.
        action: keep
        source_labels: [__meta_docker_container_label_blackbox_target]
        regex: ".+"
      - # Get target from `blackbox.target` label
        source_labels: [__meta_docker_container_label_blackbox_target]
        target_label: __param_target
      -
        source_labels: [__param_target]
        target_label: instance
      -
        target_label: __address__
        replacement: blackbox_exporter.{{ docker_network.name }}:9115

  - job_name: junos
    scrape_interval: 120s
    scrape_timeout: 30s
    static_configs:
      - targets:
        - switch.{{ common_local_tld }}
    params:
      config: ['default']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: junos_exporter.{{ docker_network.name }}:9347

alerting:
  alertmanagers:
    - scheme: http
      static_configs:
        - targets:
          - alertmanager.{{ docker_network.name }}:9093
