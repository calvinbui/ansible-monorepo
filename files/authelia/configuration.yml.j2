#jinja2: lstrip_blocks: "true", trim_blocks: "false"
---

server:
  address: 0.0.0.0:9091
  buffers:
    read: 10485760

theme: dark

identity_validation:
  reset_password:
    jwt_secret: "{{ authelia_jwt_secret }}"

authentication_backend:
  file:
    path: /config/users.yml
    watch: true

access_control:
  default_policy: deny
  rules:
    -
      # homepage
      domain_regex: "^(bazarr|calibre-web|esphome|glances|nzbget|peanut|prometheus|prowlarr|qbittorrent|radarr|scrutiny|sonarr|sonarr-anime|tubearchivist).({{ common_local_tld }}|{{ common_tld }})$"
      policy: bypass
      networks: ['{{ networks.pub.prefix}}.251/32']
    -
      domain:
        - "*.{{ common_tld }}"
        - "*.{{ common_local_tld }}"
      policy: one_factor

session:
  name: authelia_session
  secret: "{{ authelia_session_secret }}"
  cookies:
    - domain: {{ common_tld }}
      authelia_url: "{{ oidc_base_url }}"
      default_redirection_url: "https://{{ common_tld }}"
      expiration: "24h"
      remember_me: "30d"
  redis:
    host: {{ _redis_hostname }}
    port: {{ _redis_port }}
    password: {{ _redis_password }}

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
  encryption_key: "{{ authelia_storage_encryption_key }}"
  postgres:
    address: {{ _postgres_hostname }}:{{ _postgres_port }}
    database: {{ _postgres_database }}
    username: "{{ _postgres_username }}"
    password: "{{ _postgres_password }}"

notifier:
  smtp:
    username: "{{ common_email_username }}"
    password: "{{ common_email_password }}"
    address: "{{ common_email_server }}:{{ common_email_port }}"
    sender: "{{ application }}{{ common_email_to }}"
    disable_require_tls: "{{ 'false' if common_email_protocol=='tls' else 'true' }}"

identity_providers:
  oidc:
    jwks:
      - key: |
          {{ _authelia_private_key.privatekey | indent(10) }}

    cors:
      endpoints:
        - userinfo
        - authorization
        - token
        - revocation
        - introspection
      allowed_origins:
        - "https://mealie.{{ common_tld }}"

    # https://www.authelia.com/integration/openid-connect/openid-connect-1.0-claims/#restore-functionality-prior-to-claims-parameter
    claims_policies:
      restore:
        id_token: ['groups', 'email', 'email_verified', 'alt_emails', 'preferred_username', 'name']

    clients:
      {% for k, v in oidc_auth.items() %}
      - client_id: {{ k }}
        client_name: {{ k | title }}
        {% if 'secret' in v %}
        client_secret: "{{ v.secret | string | argon2(authelia_salt) }}"
        public: false
        {% else %}
        public: true
        {% endif %}
        authorization_policy: one_factor
        consent_mode: implicit
        redirect_uris:
          {% for r in v.redirect_uris %}
          - {{ r }}
          {% endfor %}
        scopes:
          - openid
          - profile
          - email
        {% if k in ["lubelogger", "mealie", "nextcloud"] %}
          - groups
        {% endif %}

        {% if k in ["lubelogger", "outline"] %}
          - offline_access
        token_endpoint_auth_method: client_secret_post
        response_types:
          - code
        {% endif %}

        {% if k in ["lubelogger", "mealie", "nextcloud"] %}
        require_pkce: true
        pkce_challenge_method: 'S256'
        {% endif %}

        userinfo_signed_response_alg: none

        {% if k == "guacamole" %}
        response_types:
          - id_token
        grant_types:
          - implicit
        {% endif %}

        {% if k == "mealie" %}
        grant_types:
          - authorization_code
        {% endif %}

        {% if k in ["lubelogger", "nextcloud"] %}
        claims_policy: 'restore'
        {% endif %}

      {% endfor %}

ntp:
  address: "udp://ntp.{{ common_tld }}:123"
