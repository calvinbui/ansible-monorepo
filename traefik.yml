---

- hosts: homeserver

  vars:
    application: traefik

    container_network: "{{ networks.mgmt }}"

  handlers:
    - name: Restart
      containers.podman.podman_container:
        name: "{{ application }}"
        force_restart: true

  tasks:
    - name: Create logs folder
      ansible.builtin.file:
        path: "{{ config_directory }}/logs"
        state: directory
        owner: "{{ common_user }}"
        group: "root"
        mode: "0771"

    - name: Create acme.json
      ansible.builtin.file:
        path: "{{ config_directory }}/acme.json"
        state: touch
        mode: "0600"
        modification_time: "preserve"
        access_time: "preserve"

    - name: Template traefik configs
      ansible.builtin.template:
        src: "{{ files_directory }}/{{ item }}.j2"
        dest: "{{ config_directory }}/{{ item }}"
        mode: "0440"
      loop:
        - traefik.yaml
        - dynamic_conf.yaml
      notify: Restart

    - name: Create container
      ansible.builtin.include_role:
        name: podman_container
      vars:
        image: public.ecr.aws/docker/library/traefik:v3.5.2
        ip: "{{ traefik_ip }}"
        restart_policy: always
        env:
          CF_API_EMAIL: "{{ cloudflare_email }}"
          CF_API_KEY: "{{ cloudflare_api }}"

          TZ: "{{ common_timezone }}"
        homepage:
          group: Networking
          weight: 300
          description: "Reverse proxy"
          widget:
            username: "{{ htpasswd.username }}"
            password: "{{ htpasswd.password }}"
        volumes:
          - /run/podman/podman.sock:/var/run/docker.sock

          - "{{ config_directory }}/traefik.yaml:/etc/traefik/traefik.yaml"
          - "{{ config_directory }}/acme.json:/acme.json"
          - "{{ config_directory }}/dynamic_conf.yaml:/dynamic_conf.yaml"

          - "{{ config_directory }}/logs:/var/log/traefik"

    - name: Create logrotate container
      ansible.builtin.include_role:
        name: podman_container
      vars:
        container_name: "{{ application }}-logrotate"
        image: ghcr.io/vegardit/traefik-logrotate:latest
        volumes:
          - /run/podman/podman.sock:/var/run/docker.sock # required to send USR1 signal to Traefik after log rotation
          - "{{ config_directory }}/logs:/var/log/traefik"
        env:
          TZ: "{{ common_timezone }}"

          LOGROTATE_LOGS: "/var/log/traefik/*.log"
          LOGROTATE_TRIGGER_INTERVAL: daily
          LOGROTATE_TRIGGER_SIZE: "1M"
          LOGROTATE_MAX_BACKUPS: "5"
          LOGROTATE_START_INDEX: "1"
          CRON_SCHEDULE: "* * * * *"
          CRON_LOG_LEVEL: "8"

          TRAEFIK_CONTAINER_ID_COMMAND: docker ps --no-trunc --quiet --filter label=org.opencontainers.image.title=Traefik
